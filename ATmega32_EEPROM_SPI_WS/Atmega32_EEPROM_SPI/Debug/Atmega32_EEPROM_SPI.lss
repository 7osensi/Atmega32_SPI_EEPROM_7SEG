
Atmega32_EEPROM_SPI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001ed6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  00001ed6  00001f4a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000183c  00000000  00000000  00001f68  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000bde  00000000  00000000  000037a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00004382  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  000044c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00004632  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000627b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00007166  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00007f14  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00008074  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00008301  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00008acf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ed       	ldi	r30, 0xD6	; 214
      68:	fe e1       	ldi	r31, 0x1E	; 30
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ac 37       	cpi	r26, 0x7C	; 124
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <main>
      7a:	0c 94 69 0f 	jmp	0x1ed2	; 0x1ed2 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 32 0f 	jmp	0x1e64	; 0x1e64 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 4e 0f 	jmp	0x1e9c	; 0x1e9c <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 3e 0f 	jmp	0x1e7c	; 0x1e7c <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 5a 0f 	jmp	0x1eb4	; 0x1eb4 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 3e 0f 	jmp	0x1e7c	; 0x1e7c <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 5a 0f 	jmp	0x1eb4	; 0x1eb4 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 32 0f 	jmp	0x1e64	; 0x1e64 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 4e 0f 	jmp	0x1e9c	; 0x1e9c <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 3e 0f 	jmp	0x1e7c	; 0x1e7c <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 5a 0f 	jmp	0x1eb4	; 0x1eb4 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 3e 0f 	jmp	0x1e7c	; 0x1e7c <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 5a 0f 	jmp	0x1eb4	; 0x1eb4 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 3e 0f 	jmp	0x1e7c	; 0x1e7c <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 5a 0f 	jmp	0x1eb4	; 0x1eb4 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 42 0f 	jmp	0x1e84	; 0x1e84 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 5e 0f 	jmp	0x1ebc	; 0x1ebc <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <MDIO_voidSetPinMode>:
#include "DIO_private.h"
#include "DIO_config.h"

/*=========================== Start_Function ===========================*/
void MDIO_voidSetPinMode(u8 copy_u8PortId, u8 copy_u8PinId, u8 copy_u8PinMode)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	27 97       	sbiw	r28, 0x07	; 7
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	89 83       	std	Y+1, r24	; 0x01
     b4c:	6a 83       	std	Y+2, r22	; 0x02
     b4e:	4b 83       	std	Y+3, r20	; 0x03
	if(copy_u8PinMode == OUTPUT)
     b50:	8b 81       	ldd	r24, Y+3	; 0x03
     b52:	88 23       	and	r24, r24
     b54:	09 f0       	breq	.+2      	; 0xb58 <MDIO_voidSetPinMode+0x22>
     b56:	78 c0       	rjmp	.+240    	; 0xc48 <MDIO_voidSetPinMode+0x112>
	{
		switch(copy_u8PortId)
     b58:	89 81       	ldd	r24, Y+1	; 0x01
     b5a:	28 2f       	mov	r18, r24
     b5c:	30 e0       	ldi	r19, 0x00	; 0
     b5e:	3f 83       	std	Y+7, r19	; 0x07
     b60:	2e 83       	std	Y+6, r18	; 0x06
     b62:	8e 81       	ldd	r24, Y+6	; 0x06
     b64:	9f 81       	ldd	r25, Y+7	; 0x07
     b66:	81 30       	cpi	r24, 0x01	; 1
     b68:	91 05       	cpc	r25, r1
     b6a:	61 f1       	breq	.+88     	; 0xbc4 <MDIO_voidSetPinMode+0x8e>
     b6c:	2e 81       	ldd	r18, Y+6	; 0x06
     b6e:	3f 81       	ldd	r19, Y+7	; 0x07
     b70:	22 30       	cpi	r18, 0x02	; 2
     b72:	31 05       	cpc	r19, r1
     b74:	2c f4       	brge	.+10     	; 0xb80 <MDIO_voidSetPinMode+0x4a>
     b76:	8e 81       	ldd	r24, Y+6	; 0x06
     b78:	9f 81       	ldd	r25, Y+7	; 0x07
     b7a:	00 97       	sbiw	r24, 0x00	; 0
     b7c:	69 f0       	breq	.+26     	; 0xb98 <MDIO_voidSetPinMode+0x62>
     b7e:	e3 c0       	rjmp	.+454    	; 0xd46 <MDIO_voidSetPinMode+0x210>
     b80:	2e 81       	ldd	r18, Y+6	; 0x06
     b82:	3f 81       	ldd	r19, Y+7	; 0x07
     b84:	22 30       	cpi	r18, 0x02	; 2
     b86:	31 05       	cpc	r19, r1
     b88:	99 f1       	breq	.+102    	; 0xbf0 <MDIO_voidSetPinMode+0xba>
     b8a:	8e 81       	ldd	r24, Y+6	; 0x06
     b8c:	9f 81       	ldd	r25, Y+7	; 0x07
     b8e:	83 30       	cpi	r24, 0x03	; 3
     b90:	91 05       	cpc	r25, r1
     b92:	09 f4       	brne	.+2      	; 0xb96 <MDIO_voidSetPinMode+0x60>
     b94:	43 c0       	rjmp	.+134    	; 0xc1c <MDIO_voidSetPinMode+0xe6>
     b96:	d7 c0       	rjmp	.+430    	; 0xd46 <MDIO_voidSetPinMode+0x210>
		{
			case GPIOA: DIO->DDRA |= (1 << copy_u8PinId);	break;
     b98:	a0 e3       	ldi	r26, 0x30	; 48
     b9a:	b0 e0       	ldi	r27, 0x00	; 0
     b9c:	e0 e3       	ldi	r30, 0x30	; 48
     b9e:	f0 e0       	ldi	r31, 0x00	; 0
     ba0:	82 85       	ldd	r24, Z+10	; 0x0a
     ba2:	48 2f       	mov	r20, r24
     ba4:	8a 81       	ldd	r24, Y+2	; 0x02
     ba6:	28 2f       	mov	r18, r24
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	81 e0       	ldi	r24, 0x01	; 1
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	02 2e       	mov	r0, r18
     bb0:	02 c0       	rjmp	.+4      	; 0xbb6 <MDIO_voidSetPinMode+0x80>
     bb2:	88 0f       	add	r24, r24
     bb4:	99 1f       	adc	r25, r25
     bb6:	0a 94       	dec	r0
     bb8:	e2 f7       	brpl	.-8      	; 0xbb2 <MDIO_voidSetPinMode+0x7c>
     bba:	84 2b       	or	r24, r20
     bbc:	1a 96       	adiw	r26, 0x0a	; 10
     bbe:	8c 93       	st	X, r24
     bc0:	1a 97       	sbiw	r26, 0x0a	; 10
     bc2:	c1 c0       	rjmp	.+386    	; 0xd46 <MDIO_voidSetPinMode+0x210>
			case GPIOB: DIO->DDRB |= (1 << copy_u8PinId);	break;
     bc4:	a0 e3       	ldi	r26, 0x30	; 48
     bc6:	b0 e0       	ldi	r27, 0x00	; 0
     bc8:	e0 e3       	ldi	r30, 0x30	; 48
     bca:	f0 e0       	ldi	r31, 0x00	; 0
     bcc:	87 81       	ldd	r24, Z+7	; 0x07
     bce:	48 2f       	mov	r20, r24
     bd0:	8a 81       	ldd	r24, Y+2	; 0x02
     bd2:	28 2f       	mov	r18, r24
     bd4:	30 e0       	ldi	r19, 0x00	; 0
     bd6:	81 e0       	ldi	r24, 0x01	; 1
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	02 2e       	mov	r0, r18
     bdc:	02 c0       	rjmp	.+4      	; 0xbe2 <MDIO_voidSetPinMode+0xac>
     bde:	88 0f       	add	r24, r24
     be0:	99 1f       	adc	r25, r25
     be2:	0a 94       	dec	r0
     be4:	e2 f7       	brpl	.-8      	; 0xbde <MDIO_voidSetPinMode+0xa8>
     be6:	84 2b       	or	r24, r20
     be8:	17 96       	adiw	r26, 0x07	; 7
     bea:	8c 93       	st	X, r24
     bec:	17 97       	sbiw	r26, 0x07	; 7
     bee:	ab c0       	rjmp	.+342    	; 0xd46 <MDIO_voidSetPinMode+0x210>
			case GPIOC: DIO->DDRC |= (1 << copy_u8PinId);	break;
     bf0:	a0 e3       	ldi	r26, 0x30	; 48
     bf2:	b0 e0       	ldi	r27, 0x00	; 0
     bf4:	e0 e3       	ldi	r30, 0x30	; 48
     bf6:	f0 e0       	ldi	r31, 0x00	; 0
     bf8:	84 81       	ldd	r24, Z+4	; 0x04
     bfa:	48 2f       	mov	r20, r24
     bfc:	8a 81       	ldd	r24, Y+2	; 0x02
     bfe:	28 2f       	mov	r18, r24
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	81 e0       	ldi	r24, 0x01	; 1
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	02 2e       	mov	r0, r18
     c08:	02 c0       	rjmp	.+4      	; 0xc0e <MDIO_voidSetPinMode+0xd8>
     c0a:	88 0f       	add	r24, r24
     c0c:	99 1f       	adc	r25, r25
     c0e:	0a 94       	dec	r0
     c10:	e2 f7       	brpl	.-8      	; 0xc0a <MDIO_voidSetPinMode+0xd4>
     c12:	84 2b       	or	r24, r20
     c14:	14 96       	adiw	r26, 0x04	; 4
     c16:	8c 93       	st	X, r24
     c18:	14 97       	sbiw	r26, 0x04	; 4
     c1a:	95 c0       	rjmp	.+298    	; 0xd46 <MDIO_voidSetPinMode+0x210>
			case GPIOD: DIO->DDRD |= (1 << copy_u8PinId);	break;
     c1c:	a0 e3       	ldi	r26, 0x30	; 48
     c1e:	b0 e0       	ldi	r27, 0x00	; 0
     c20:	e0 e3       	ldi	r30, 0x30	; 48
     c22:	f0 e0       	ldi	r31, 0x00	; 0
     c24:	81 81       	ldd	r24, Z+1	; 0x01
     c26:	48 2f       	mov	r20, r24
     c28:	8a 81       	ldd	r24, Y+2	; 0x02
     c2a:	28 2f       	mov	r18, r24
     c2c:	30 e0       	ldi	r19, 0x00	; 0
     c2e:	81 e0       	ldi	r24, 0x01	; 1
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	02 2e       	mov	r0, r18
     c34:	02 c0       	rjmp	.+4      	; 0xc3a <MDIO_voidSetPinMode+0x104>
     c36:	88 0f       	add	r24, r24
     c38:	99 1f       	adc	r25, r25
     c3a:	0a 94       	dec	r0
     c3c:	e2 f7       	brpl	.-8      	; 0xc36 <MDIO_voidSetPinMode+0x100>
     c3e:	84 2b       	or	r24, r20
     c40:	11 96       	adiw	r26, 0x01	; 1
     c42:	8c 93       	st	X, r24
     c44:	11 97       	sbiw	r26, 0x01	; 1
     c46:	7f c0       	rjmp	.+254    	; 0xd46 <MDIO_voidSetPinMode+0x210>
			default:										break;
		}
	}
	else if(copy_u8PinMode == INPUT)
     c48:	8b 81       	ldd	r24, Y+3	; 0x03
     c4a:	81 30       	cpi	r24, 0x01	; 1
     c4c:	09 f0       	breq	.+2      	; 0xc50 <MDIO_voidSetPinMode+0x11a>
     c4e:	7b c0       	rjmp	.+246    	; 0xd46 <MDIO_voidSetPinMode+0x210>
	{
		switch(copy_u8PortId)
     c50:	89 81       	ldd	r24, Y+1	; 0x01
     c52:	28 2f       	mov	r18, r24
     c54:	30 e0       	ldi	r19, 0x00	; 0
     c56:	3d 83       	std	Y+5, r19	; 0x05
     c58:	2c 83       	std	Y+4, r18	; 0x04
     c5a:	8c 81       	ldd	r24, Y+4	; 0x04
     c5c:	9d 81       	ldd	r25, Y+5	; 0x05
     c5e:	81 30       	cpi	r24, 0x01	; 1
     c60:	91 05       	cpc	r25, r1
     c62:	69 f1       	breq	.+90     	; 0xcbe <MDIO_voidSetPinMode+0x188>
     c64:	2c 81       	ldd	r18, Y+4	; 0x04
     c66:	3d 81       	ldd	r19, Y+5	; 0x05
     c68:	22 30       	cpi	r18, 0x02	; 2
     c6a:	31 05       	cpc	r19, r1
     c6c:	2c f4       	brge	.+10     	; 0xc78 <MDIO_voidSetPinMode+0x142>
     c6e:	8c 81       	ldd	r24, Y+4	; 0x04
     c70:	9d 81       	ldd	r25, Y+5	; 0x05
     c72:	00 97       	sbiw	r24, 0x00	; 0
     c74:	69 f0       	breq	.+26     	; 0xc90 <MDIO_voidSetPinMode+0x15a>
     c76:	67 c0       	rjmp	.+206    	; 0xd46 <MDIO_voidSetPinMode+0x210>
     c78:	2c 81       	ldd	r18, Y+4	; 0x04
     c7a:	3d 81       	ldd	r19, Y+5	; 0x05
     c7c:	22 30       	cpi	r18, 0x02	; 2
     c7e:	31 05       	cpc	r19, r1
     c80:	a9 f1       	breq	.+106    	; 0xcec <MDIO_voidSetPinMode+0x1b6>
     c82:	8c 81       	ldd	r24, Y+4	; 0x04
     c84:	9d 81       	ldd	r25, Y+5	; 0x05
     c86:	83 30       	cpi	r24, 0x03	; 3
     c88:	91 05       	cpc	r25, r1
     c8a:	09 f4       	brne	.+2      	; 0xc8e <MDIO_voidSetPinMode+0x158>
     c8c:	46 c0       	rjmp	.+140    	; 0xd1a <MDIO_voidSetPinMode+0x1e4>
     c8e:	5b c0       	rjmp	.+182    	; 0xd46 <MDIO_voidSetPinMode+0x210>
		{
			case GPIOA: DIO->DDRA &= ~(1 << copy_u8PinId);	break;
     c90:	a0 e3       	ldi	r26, 0x30	; 48
     c92:	b0 e0       	ldi	r27, 0x00	; 0
     c94:	e0 e3       	ldi	r30, 0x30	; 48
     c96:	f0 e0       	ldi	r31, 0x00	; 0
     c98:	82 85       	ldd	r24, Z+10	; 0x0a
     c9a:	48 2f       	mov	r20, r24
     c9c:	8a 81       	ldd	r24, Y+2	; 0x02
     c9e:	28 2f       	mov	r18, r24
     ca0:	30 e0       	ldi	r19, 0x00	; 0
     ca2:	81 e0       	ldi	r24, 0x01	; 1
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	02 2e       	mov	r0, r18
     ca8:	02 c0       	rjmp	.+4      	; 0xcae <MDIO_voidSetPinMode+0x178>
     caa:	88 0f       	add	r24, r24
     cac:	99 1f       	adc	r25, r25
     cae:	0a 94       	dec	r0
     cb0:	e2 f7       	brpl	.-8      	; 0xcaa <MDIO_voidSetPinMode+0x174>
     cb2:	80 95       	com	r24
     cb4:	84 23       	and	r24, r20
     cb6:	1a 96       	adiw	r26, 0x0a	; 10
     cb8:	8c 93       	st	X, r24
     cba:	1a 97       	sbiw	r26, 0x0a	; 10
     cbc:	44 c0       	rjmp	.+136    	; 0xd46 <MDIO_voidSetPinMode+0x210>
			case GPIOB: DIO->DDRB &= ~(1 << copy_u8PinId);	break;
     cbe:	a0 e3       	ldi	r26, 0x30	; 48
     cc0:	b0 e0       	ldi	r27, 0x00	; 0
     cc2:	e0 e3       	ldi	r30, 0x30	; 48
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	87 81       	ldd	r24, Z+7	; 0x07
     cc8:	48 2f       	mov	r20, r24
     cca:	8a 81       	ldd	r24, Y+2	; 0x02
     ccc:	28 2f       	mov	r18, r24
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	81 e0       	ldi	r24, 0x01	; 1
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	02 2e       	mov	r0, r18
     cd6:	02 c0       	rjmp	.+4      	; 0xcdc <MDIO_voidSetPinMode+0x1a6>
     cd8:	88 0f       	add	r24, r24
     cda:	99 1f       	adc	r25, r25
     cdc:	0a 94       	dec	r0
     cde:	e2 f7       	brpl	.-8      	; 0xcd8 <MDIO_voidSetPinMode+0x1a2>
     ce0:	80 95       	com	r24
     ce2:	84 23       	and	r24, r20
     ce4:	17 96       	adiw	r26, 0x07	; 7
     ce6:	8c 93       	st	X, r24
     ce8:	17 97       	sbiw	r26, 0x07	; 7
     cea:	2d c0       	rjmp	.+90     	; 0xd46 <MDIO_voidSetPinMode+0x210>
			case GPIOC: DIO->DDRC &= ~(1 << copy_u8PinId);	break;
     cec:	a0 e3       	ldi	r26, 0x30	; 48
     cee:	b0 e0       	ldi	r27, 0x00	; 0
     cf0:	e0 e3       	ldi	r30, 0x30	; 48
     cf2:	f0 e0       	ldi	r31, 0x00	; 0
     cf4:	84 81       	ldd	r24, Z+4	; 0x04
     cf6:	48 2f       	mov	r20, r24
     cf8:	8a 81       	ldd	r24, Y+2	; 0x02
     cfa:	28 2f       	mov	r18, r24
     cfc:	30 e0       	ldi	r19, 0x00	; 0
     cfe:	81 e0       	ldi	r24, 0x01	; 1
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	02 2e       	mov	r0, r18
     d04:	02 c0       	rjmp	.+4      	; 0xd0a <MDIO_voidSetPinMode+0x1d4>
     d06:	88 0f       	add	r24, r24
     d08:	99 1f       	adc	r25, r25
     d0a:	0a 94       	dec	r0
     d0c:	e2 f7       	brpl	.-8      	; 0xd06 <MDIO_voidSetPinMode+0x1d0>
     d0e:	80 95       	com	r24
     d10:	84 23       	and	r24, r20
     d12:	14 96       	adiw	r26, 0x04	; 4
     d14:	8c 93       	st	X, r24
     d16:	14 97       	sbiw	r26, 0x04	; 4
     d18:	16 c0       	rjmp	.+44     	; 0xd46 <MDIO_voidSetPinMode+0x210>
			case GPIOD: DIO->DDRD &= ~(1 << copy_u8PinId);	break;
     d1a:	a0 e3       	ldi	r26, 0x30	; 48
     d1c:	b0 e0       	ldi	r27, 0x00	; 0
     d1e:	e0 e3       	ldi	r30, 0x30	; 48
     d20:	f0 e0       	ldi	r31, 0x00	; 0
     d22:	81 81       	ldd	r24, Z+1	; 0x01
     d24:	48 2f       	mov	r20, r24
     d26:	8a 81       	ldd	r24, Y+2	; 0x02
     d28:	28 2f       	mov	r18, r24
     d2a:	30 e0       	ldi	r19, 0x00	; 0
     d2c:	81 e0       	ldi	r24, 0x01	; 1
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	02 2e       	mov	r0, r18
     d32:	02 c0       	rjmp	.+4      	; 0xd38 <MDIO_voidSetPinMode+0x202>
     d34:	88 0f       	add	r24, r24
     d36:	99 1f       	adc	r25, r25
     d38:	0a 94       	dec	r0
     d3a:	e2 f7       	brpl	.-8      	; 0xd34 <MDIO_voidSetPinMode+0x1fe>
     d3c:	80 95       	com	r24
     d3e:	84 23       	and	r24, r20
     d40:	11 96       	adiw	r26, 0x01	; 1
     d42:	8c 93       	st	X, r24
     d44:	11 97       	sbiw	r26, 0x01	; 1
			default:										break;
		}
	}
}
     d46:	27 96       	adiw	r28, 0x07	; 7
     d48:	0f b6       	in	r0, 0x3f	; 63
     d4a:	f8 94       	cli
     d4c:	de bf       	out	0x3e, r29	; 62
     d4e:	0f be       	out	0x3f, r0	; 63
     d50:	cd bf       	out	0x3d, r28	; 61
     d52:	cf 91       	pop	r28
     d54:	df 91       	pop	r29
     d56:	08 95       	ret

00000d58 <MDIO_voidSetPortMode>:
/*============================ End_Function ============================*/
/*=========================== Start_Function ===========================*/
void MDIO_voidSetPortMode(u8 copy_u8PortId, u8 copy_u8PortMode)
{
     d58:	df 93       	push	r29
     d5a:	cf 93       	push	r28
     d5c:	00 d0       	rcall	.+0      	; 0xd5e <MDIO_voidSetPortMode+0x6>
     d5e:	00 d0       	rcall	.+0      	; 0xd60 <MDIO_voidSetPortMode+0x8>
     d60:	00 d0       	rcall	.+0      	; 0xd62 <MDIO_voidSetPortMode+0xa>
     d62:	cd b7       	in	r28, 0x3d	; 61
     d64:	de b7       	in	r29, 0x3e	; 62
     d66:	89 83       	std	Y+1, r24	; 0x01
     d68:	6a 83       	std	Y+2, r22	; 0x02
	if(copy_u8PortMode == OUTPUT)
     d6a:	8a 81       	ldd	r24, Y+2	; 0x02
     d6c:	88 23       	and	r24, r24
     d6e:	99 f5       	brne	.+102    	; 0xdd6 <MDIO_voidSetPortMode+0x7e>
	{
		switch(copy_u8PortId)
     d70:	89 81       	ldd	r24, Y+1	; 0x01
     d72:	28 2f       	mov	r18, r24
     d74:	30 e0       	ldi	r19, 0x00	; 0
     d76:	3e 83       	std	Y+6, r19	; 0x06
     d78:	2d 83       	std	Y+5, r18	; 0x05
     d7a:	8d 81       	ldd	r24, Y+5	; 0x05
     d7c:	9e 81       	ldd	r25, Y+6	; 0x06
     d7e:	81 30       	cpi	r24, 0x01	; 1
     d80:	91 05       	cpc	r25, r1
     d82:	d1 f0       	breq	.+52     	; 0xdb8 <MDIO_voidSetPortMode+0x60>
     d84:	2d 81       	ldd	r18, Y+5	; 0x05
     d86:	3e 81       	ldd	r19, Y+6	; 0x06
     d88:	22 30       	cpi	r18, 0x02	; 2
     d8a:	31 05       	cpc	r19, r1
     d8c:	2c f4       	brge	.+10     	; 0xd98 <MDIO_voidSetPortMode+0x40>
     d8e:	8d 81       	ldd	r24, Y+5	; 0x05
     d90:	9e 81       	ldd	r25, Y+6	; 0x06
     d92:	00 97       	sbiw	r24, 0x00	; 0
     d94:	61 f0       	breq	.+24     	; 0xdae <MDIO_voidSetPortMode+0x56>
     d96:	50 c0       	rjmp	.+160    	; 0xe38 <MDIO_voidSetPortMode+0xe0>
     d98:	2d 81       	ldd	r18, Y+5	; 0x05
     d9a:	3e 81       	ldd	r19, Y+6	; 0x06
     d9c:	22 30       	cpi	r18, 0x02	; 2
     d9e:	31 05       	cpc	r19, r1
     da0:	81 f0       	breq	.+32     	; 0xdc2 <MDIO_voidSetPortMode+0x6a>
     da2:	8d 81       	ldd	r24, Y+5	; 0x05
     da4:	9e 81       	ldd	r25, Y+6	; 0x06
     da6:	83 30       	cpi	r24, 0x03	; 3
     da8:	91 05       	cpc	r25, r1
     daa:	81 f0       	breq	.+32     	; 0xdcc <MDIO_voidSetPortMode+0x74>
     dac:	45 c0       	rjmp	.+138    	; 0xe38 <MDIO_voidSetPortMode+0xe0>
		{
			case GPIOA: DIO->DDRA = 0xFF;	break;
     dae:	e0 e3       	ldi	r30, 0x30	; 48
     db0:	f0 e0       	ldi	r31, 0x00	; 0
     db2:	8f ef       	ldi	r24, 0xFF	; 255
     db4:	82 87       	std	Z+10, r24	; 0x0a
     db6:	40 c0       	rjmp	.+128    	; 0xe38 <MDIO_voidSetPortMode+0xe0>
			case GPIOB: DIO->DDRB = 0xFF;	break;
     db8:	e0 e3       	ldi	r30, 0x30	; 48
     dba:	f0 e0       	ldi	r31, 0x00	; 0
     dbc:	8f ef       	ldi	r24, 0xFF	; 255
     dbe:	87 83       	std	Z+7, r24	; 0x07
     dc0:	3b c0       	rjmp	.+118    	; 0xe38 <MDIO_voidSetPortMode+0xe0>
			case GPIOC: DIO->DDRC = 0xFF;	break;
     dc2:	e0 e3       	ldi	r30, 0x30	; 48
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	8f ef       	ldi	r24, 0xFF	; 255
     dc8:	84 83       	std	Z+4, r24	; 0x04
     dca:	36 c0       	rjmp	.+108    	; 0xe38 <MDIO_voidSetPortMode+0xe0>
			case GPIOD: DIO->DDRD = 0xFF;	break;
     dcc:	e0 e3       	ldi	r30, 0x30	; 48
     dce:	f0 e0       	ldi	r31, 0x00	; 0
     dd0:	8f ef       	ldi	r24, 0xFF	; 255
     dd2:	81 83       	std	Z+1, r24	; 0x01
     dd4:	31 c0       	rjmp	.+98     	; 0xe38 <MDIO_voidSetPortMode+0xe0>
			default:						break;
		}
	}
	else if(copy_u8PortMode == INPUT)
     dd6:	8a 81       	ldd	r24, Y+2	; 0x02
     dd8:	81 30       	cpi	r24, 0x01	; 1
     dda:	71 f5       	brne	.+92     	; 0xe38 <MDIO_voidSetPortMode+0xe0>
	{
		switch(copy_u8PortId)
     ddc:	89 81       	ldd	r24, Y+1	; 0x01
     dde:	28 2f       	mov	r18, r24
     de0:	30 e0       	ldi	r19, 0x00	; 0
     de2:	3c 83       	std	Y+4, r19	; 0x04
     de4:	2b 83       	std	Y+3, r18	; 0x03
     de6:	8b 81       	ldd	r24, Y+3	; 0x03
     de8:	9c 81       	ldd	r25, Y+4	; 0x04
     dea:	81 30       	cpi	r24, 0x01	; 1
     dec:	91 05       	cpc	r25, r1
     dee:	c9 f0       	breq	.+50     	; 0xe22 <MDIO_voidSetPortMode+0xca>
     df0:	2b 81       	ldd	r18, Y+3	; 0x03
     df2:	3c 81       	ldd	r19, Y+4	; 0x04
     df4:	22 30       	cpi	r18, 0x02	; 2
     df6:	31 05       	cpc	r19, r1
     df8:	2c f4       	brge	.+10     	; 0xe04 <MDIO_voidSetPortMode+0xac>
     dfa:	8b 81       	ldd	r24, Y+3	; 0x03
     dfc:	9c 81       	ldd	r25, Y+4	; 0x04
     dfe:	00 97       	sbiw	r24, 0x00	; 0
     e00:	61 f0       	breq	.+24     	; 0xe1a <MDIO_voidSetPortMode+0xc2>
     e02:	1a c0       	rjmp	.+52     	; 0xe38 <MDIO_voidSetPortMode+0xe0>
     e04:	2b 81       	ldd	r18, Y+3	; 0x03
     e06:	3c 81       	ldd	r19, Y+4	; 0x04
     e08:	22 30       	cpi	r18, 0x02	; 2
     e0a:	31 05       	cpc	r19, r1
     e0c:	71 f0       	breq	.+28     	; 0xe2a <MDIO_voidSetPortMode+0xd2>
     e0e:	8b 81       	ldd	r24, Y+3	; 0x03
     e10:	9c 81       	ldd	r25, Y+4	; 0x04
     e12:	83 30       	cpi	r24, 0x03	; 3
     e14:	91 05       	cpc	r25, r1
     e16:	69 f0       	breq	.+26     	; 0xe32 <MDIO_voidSetPortMode+0xda>
     e18:	0f c0       	rjmp	.+30     	; 0xe38 <MDIO_voidSetPortMode+0xe0>
		{
			case GPIOA: DIO->DDRA = 0x00;	break;
     e1a:	e0 e3       	ldi	r30, 0x30	; 48
     e1c:	f0 e0       	ldi	r31, 0x00	; 0
     e1e:	12 86       	std	Z+10, r1	; 0x0a
     e20:	0b c0       	rjmp	.+22     	; 0xe38 <MDIO_voidSetPortMode+0xe0>
			case GPIOB: DIO->DDRB = 0x00;	break;
     e22:	e0 e3       	ldi	r30, 0x30	; 48
     e24:	f0 e0       	ldi	r31, 0x00	; 0
     e26:	17 82       	std	Z+7, r1	; 0x07
     e28:	07 c0       	rjmp	.+14     	; 0xe38 <MDIO_voidSetPortMode+0xe0>
			case GPIOC: DIO->DDRC = 0x00;	break;
     e2a:	e0 e3       	ldi	r30, 0x30	; 48
     e2c:	f0 e0       	ldi	r31, 0x00	; 0
     e2e:	14 82       	std	Z+4, r1	; 0x04
     e30:	03 c0       	rjmp	.+6      	; 0xe38 <MDIO_voidSetPortMode+0xe0>
			case GPIOD: DIO->DDRD = 0x00;	break;
     e32:	e0 e3       	ldi	r30, 0x30	; 48
     e34:	f0 e0       	ldi	r31, 0x00	; 0
     e36:	11 82       	std	Z+1, r1	; 0x01
			default:						break;
		}
	}
}
     e38:	26 96       	adiw	r28, 0x06	; 6
     e3a:	0f b6       	in	r0, 0x3f	; 63
     e3c:	f8 94       	cli
     e3e:	de bf       	out	0x3e, r29	; 62
     e40:	0f be       	out	0x3f, r0	; 63
     e42:	cd bf       	out	0x3d, r28	; 61
     e44:	cf 91       	pop	r28
     e46:	df 91       	pop	r29
     e48:	08 95       	ret

00000e4a <MDIO_voidSetPinValue>:
/*============================ End_Function ============================*/
/*=========================== Start_Function ===========================*/
void MDIO_voidSetPinValue(u8 copy_u8PortId, u8 copy_u8PinId, u8 copy_u8PinValue)
{
     e4a:	df 93       	push	r29
     e4c:	cf 93       	push	r28
     e4e:	cd b7       	in	r28, 0x3d	; 61
     e50:	de b7       	in	r29, 0x3e	; 62
     e52:	27 97       	sbiw	r28, 0x07	; 7
     e54:	0f b6       	in	r0, 0x3f	; 63
     e56:	f8 94       	cli
     e58:	de bf       	out	0x3e, r29	; 62
     e5a:	0f be       	out	0x3f, r0	; 63
     e5c:	cd bf       	out	0x3d, r28	; 61
     e5e:	89 83       	std	Y+1, r24	; 0x01
     e60:	6a 83       	std	Y+2, r22	; 0x02
     e62:	4b 83       	std	Y+3, r20	; 0x03
	if(copy_u8PinValue == HIGH)
     e64:	8b 81       	ldd	r24, Y+3	; 0x03
     e66:	88 23       	and	r24, r24
     e68:	09 f0       	breq	.+2      	; 0xe6c <MDIO_voidSetPinValue+0x22>
     e6a:	78 c0       	rjmp	.+240    	; 0xf5c <MDIO_voidSetPinValue+0x112>
	{
		switch(copy_u8PortId)
     e6c:	89 81       	ldd	r24, Y+1	; 0x01
     e6e:	28 2f       	mov	r18, r24
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	3f 83       	std	Y+7, r19	; 0x07
     e74:	2e 83       	std	Y+6, r18	; 0x06
     e76:	8e 81       	ldd	r24, Y+6	; 0x06
     e78:	9f 81       	ldd	r25, Y+7	; 0x07
     e7a:	81 30       	cpi	r24, 0x01	; 1
     e7c:	91 05       	cpc	r25, r1
     e7e:	61 f1       	breq	.+88     	; 0xed8 <MDIO_voidSetPinValue+0x8e>
     e80:	2e 81       	ldd	r18, Y+6	; 0x06
     e82:	3f 81       	ldd	r19, Y+7	; 0x07
     e84:	22 30       	cpi	r18, 0x02	; 2
     e86:	31 05       	cpc	r19, r1
     e88:	2c f4       	brge	.+10     	; 0xe94 <MDIO_voidSetPinValue+0x4a>
     e8a:	8e 81       	ldd	r24, Y+6	; 0x06
     e8c:	9f 81       	ldd	r25, Y+7	; 0x07
     e8e:	00 97       	sbiw	r24, 0x00	; 0
     e90:	69 f0       	breq	.+26     	; 0xeac <MDIO_voidSetPinValue+0x62>
     e92:	e3 c0       	rjmp	.+454    	; 0x105a <MDIO_voidSetPinValue+0x210>
     e94:	2e 81       	ldd	r18, Y+6	; 0x06
     e96:	3f 81       	ldd	r19, Y+7	; 0x07
     e98:	22 30       	cpi	r18, 0x02	; 2
     e9a:	31 05       	cpc	r19, r1
     e9c:	99 f1       	breq	.+102    	; 0xf04 <MDIO_voidSetPinValue+0xba>
     e9e:	8e 81       	ldd	r24, Y+6	; 0x06
     ea0:	9f 81       	ldd	r25, Y+7	; 0x07
     ea2:	83 30       	cpi	r24, 0x03	; 3
     ea4:	91 05       	cpc	r25, r1
     ea6:	09 f4       	brne	.+2      	; 0xeaa <MDIO_voidSetPinValue+0x60>
     ea8:	43 c0       	rjmp	.+134    	; 0xf30 <MDIO_voidSetPinValue+0xe6>
     eaa:	d7 c0       	rjmp	.+430    	; 0x105a <MDIO_voidSetPinValue+0x210>
		{
			case GPIOA: DIO->PORTA |= (1 << copy_u8PinId);	break;
     eac:	a0 e3       	ldi	r26, 0x30	; 48
     eae:	b0 e0       	ldi	r27, 0x00	; 0
     eb0:	e0 e3       	ldi	r30, 0x30	; 48
     eb2:	f0 e0       	ldi	r31, 0x00	; 0
     eb4:	83 85       	ldd	r24, Z+11	; 0x0b
     eb6:	48 2f       	mov	r20, r24
     eb8:	8a 81       	ldd	r24, Y+2	; 0x02
     eba:	28 2f       	mov	r18, r24
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	81 e0       	ldi	r24, 0x01	; 1
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	02 2e       	mov	r0, r18
     ec4:	02 c0       	rjmp	.+4      	; 0xeca <MDIO_voidSetPinValue+0x80>
     ec6:	88 0f       	add	r24, r24
     ec8:	99 1f       	adc	r25, r25
     eca:	0a 94       	dec	r0
     ecc:	e2 f7       	brpl	.-8      	; 0xec6 <MDIO_voidSetPinValue+0x7c>
     ece:	84 2b       	or	r24, r20
     ed0:	1b 96       	adiw	r26, 0x0b	; 11
     ed2:	8c 93       	st	X, r24
     ed4:	1b 97       	sbiw	r26, 0x0b	; 11
     ed6:	c1 c0       	rjmp	.+386    	; 0x105a <MDIO_voidSetPinValue+0x210>
			case GPIOB: DIO->PORTB |= (1 << copy_u8PinId);	break;
     ed8:	a0 e3       	ldi	r26, 0x30	; 48
     eda:	b0 e0       	ldi	r27, 0x00	; 0
     edc:	e0 e3       	ldi	r30, 0x30	; 48
     ede:	f0 e0       	ldi	r31, 0x00	; 0
     ee0:	80 85       	ldd	r24, Z+8	; 0x08
     ee2:	48 2f       	mov	r20, r24
     ee4:	8a 81       	ldd	r24, Y+2	; 0x02
     ee6:	28 2f       	mov	r18, r24
     ee8:	30 e0       	ldi	r19, 0x00	; 0
     eea:	81 e0       	ldi	r24, 0x01	; 1
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	02 2e       	mov	r0, r18
     ef0:	02 c0       	rjmp	.+4      	; 0xef6 <MDIO_voidSetPinValue+0xac>
     ef2:	88 0f       	add	r24, r24
     ef4:	99 1f       	adc	r25, r25
     ef6:	0a 94       	dec	r0
     ef8:	e2 f7       	brpl	.-8      	; 0xef2 <MDIO_voidSetPinValue+0xa8>
     efa:	84 2b       	or	r24, r20
     efc:	18 96       	adiw	r26, 0x08	; 8
     efe:	8c 93       	st	X, r24
     f00:	18 97       	sbiw	r26, 0x08	; 8
     f02:	ab c0       	rjmp	.+342    	; 0x105a <MDIO_voidSetPinValue+0x210>
			case GPIOC: DIO->PORTC |= (1 << copy_u8PinId);	break;
     f04:	a0 e3       	ldi	r26, 0x30	; 48
     f06:	b0 e0       	ldi	r27, 0x00	; 0
     f08:	e0 e3       	ldi	r30, 0x30	; 48
     f0a:	f0 e0       	ldi	r31, 0x00	; 0
     f0c:	85 81       	ldd	r24, Z+5	; 0x05
     f0e:	48 2f       	mov	r20, r24
     f10:	8a 81       	ldd	r24, Y+2	; 0x02
     f12:	28 2f       	mov	r18, r24
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	81 e0       	ldi	r24, 0x01	; 1
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	02 2e       	mov	r0, r18
     f1c:	02 c0       	rjmp	.+4      	; 0xf22 <MDIO_voidSetPinValue+0xd8>
     f1e:	88 0f       	add	r24, r24
     f20:	99 1f       	adc	r25, r25
     f22:	0a 94       	dec	r0
     f24:	e2 f7       	brpl	.-8      	; 0xf1e <MDIO_voidSetPinValue+0xd4>
     f26:	84 2b       	or	r24, r20
     f28:	15 96       	adiw	r26, 0x05	; 5
     f2a:	8c 93       	st	X, r24
     f2c:	15 97       	sbiw	r26, 0x05	; 5
     f2e:	95 c0       	rjmp	.+298    	; 0x105a <MDIO_voidSetPinValue+0x210>
			case GPIOD: DIO->PORTD |= (1 << copy_u8PinId);	break;
     f30:	a0 e3       	ldi	r26, 0x30	; 48
     f32:	b0 e0       	ldi	r27, 0x00	; 0
     f34:	e0 e3       	ldi	r30, 0x30	; 48
     f36:	f0 e0       	ldi	r31, 0x00	; 0
     f38:	82 81       	ldd	r24, Z+2	; 0x02
     f3a:	48 2f       	mov	r20, r24
     f3c:	8a 81       	ldd	r24, Y+2	; 0x02
     f3e:	28 2f       	mov	r18, r24
     f40:	30 e0       	ldi	r19, 0x00	; 0
     f42:	81 e0       	ldi	r24, 0x01	; 1
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	02 2e       	mov	r0, r18
     f48:	02 c0       	rjmp	.+4      	; 0xf4e <MDIO_voidSetPinValue+0x104>
     f4a:	88 0f       	add	r24, r24
     f4c:	99 1f       	adc	r25, r25
     f4e:	0a 94       	dec	r0
     f50:	e2 f7       	brpl	.-8      	; 0xf4a <MDIO_voidSetPinValue+0x100>
     f52:	84 2b       	or	r24, r20
     f54:	12 96       	adiw	r26, 0x02	; 2
     f56:	8c 93       	st	X, r24
     f58:	12 97       	sbiw	r26, 0x02	; 2
     f5a:	7f c0       	rjmp	.+254    	; 0x105a <MDIO_voidSetPinValue+0x210>
			default:										break;
		}
	}
	else if(copy_u8PinValue == LOW)
     f5c:	8b 81       	ldd	r24, Y+3	; 0x03
     f5e:	81 30       	cpi	r24, 0x01	; 1
     f60:	09 f0       	breq	.+2      	; 0xf64 <MDIO_voidSetPinValue+0x11a>
     f62:	7b c0       	rjmp	.+246    	; 0x105a <MDIO_voidSetPinValue+0x210>
	{
		switch(copy_u8PortId)
     f64:	89 81       	ldd	r24, Y+1	; 0x01
     f66:	28 2f       	mov	r18, r24
     f68:	30 e0       	ldi	r19, 0x00	; 0
     f6a:	3d 83       	std	Y+5, r19	; 0x05
     f6c:	2c 83       	std	Y+4, r18	; 0x04
     f6e:	8c 81       	ldd	r24, Y+4	; 0x04
     f70:	9d 81       	ldd	r25, Y+5	; 0x05
     f72:	81 30       	cpi	r24, 0x01	; 1
     f74:	91 05       	cpc	r25, r1
     f76:	69 f1       	breq	.+90     	; 0xfd2 <MDIO_voidSetPinValue+0x188>
     f78:	2c 81       	ldd	r18, Y+4	; 0x04
     f7a:	3d 81       	ldd	r19, Y+5	; 0x05
     f7c:	22 30       	cpi	r18, 0x02	; 2
     f7e:	31 05       	cpc	r19, r1
     f80:	2c f4       	brge	.+10     	; 0xf8c <MDIO_voidSetPinValue+0x142>
     f82:	8c 81       	ldd	r24, Y+4	; 0x04
     f84:	9d 81       	ldd	r25, Y+5	; 0x05
     f86:	00 97       	sbiw	r24, 0x00	; 0
     f88:	69 f0       	breq	.+26     	; 0xfa4 <MDIO_voidSetPinValue+0x15a>
     f8a:	67 c0       	rjmp	.+206    	; 0x105a <MDIO_voidSetPinValue+0x210>
     f8c:	2c 81       	ldd	r18, Y+4	; 0x04
     f8e:	3d 81       	ldd	r19, Y+5	; 0x05
     f90:	22 30       	cpi	r18, 0x02	; 2
     f92:	31 05       	cpc	r19, r1
     f94:	a9 f1       	breq	.+106    	; 0x1000 <MDIO_voidSetPinValue+0x1b6>
     f96:	8c 81       	ldd	r24, Y+4	; 0x04
     f98:	9d 81       	ldd	r25, Y+5	; 0x05
     f9a:	83 30       	cpi	r24, 0x03	; 3
     f9c:	91 05       	cpc	r25, r1
     f9e:	09 f4       	brne	.+2      	; 0xfa2 <MDIO_voidSetPinValue+0x158>
     fa0:	46 c0       	rjmp	.+140    	; 0x102e <MDIO_voidSetPinValue+0x1e4>
     fa2:	5b c0       	rjmp	.+182    	; 0x105a <MDIO_voidSetPinValue+0x210>
		{
			case GPIOA: DIO->PORTA &= ~(1 << copy_u8PinId);	break;
     fa4:	a0 e3       	ldi	r26, 0x30	; 48
     fa6:	b0 e0       	ldi	r27, 0x00	; 0
     fa8:	e0 e3       	ldi	r30, 0x30	; 48
     faa:	f0 e0       	ldi	r31, 0x00	; 0
     fac:	83 85       	ldd	r24, Z+11	; 0x0b
     fae:	48 2f       	mov	r20, r24
     fb0:	8a 81       	ldd	r24, Y+2	; 0x02
     fb2:	28 2f       	mov	r18, r24
     fb4:	30 e0       	ldi	r19, 0x00	; 0
     fb6:	81 e0       	ldi	r24, 0x01	; 1
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	02 2e       	mov	r0, r18
     fbc:	02 c0       	rjmp	.+4      	; 0xfc2 <MDIO_voidSetPinValue+0x178>
     fbe:	88 0f       	add	r24, r24
     fc0:	99 1f       	adc	r25, r25
     fc2:	0a 94       	dec	r0
     fc4:	e2 f7       	brpl	.-8      	; 0xfbe <MDIO_voidSetPinValue+0x174>
     fc6:	80 95       	com	r24
     fc8:	84 23       	and	r24, r20
     fca:	1b 96       	adiw	r26, 0x0b	; 11
     fcc:	8c 93       	st	X, r24
     fce:	1b 97       	sbiw	r26, 0x0b	; 11
     fd0:	44 c0       	rjmp	.+136    	; 0x105a <MDIO_voidSetPinValue+0x210>
			case GPIOB: DIO->PORTB &= ~(1 << copy_u8PinId);	break;
     fd2:	a0 e3       	ldi	r26, 0x30	; 48
     fd4:	b0 e0       	ldi	r27, 0x00	; 0
     fd6:	e0 e3       	ldi	r30, 0x30	; 48
     fd8:	f0 e0       	ldi	r31, 0x00	; 0
     fda:	80 85       	ldd	r24, Z+8	; 0x08
     fdc:	48 2f       	mov	r20, r24
     fde:	8a 81       	ldd	r24, Y+2	; 0x02
     fe0:	28 2f       	mov	r18, r24
     fe2:	30 e0       	ldi	r19, 0x00	; 0
     fe4:	81 e0       	ldi	r24, 0x01	; 1
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	02 2e       	mov	r0, r18
     fea:	02 c0       	rjmp	.+4      	; 0xff0 <MDIO_voidSetPinValue+0x1a6>
     fec:	88 0f       	add	r24, r24
     fee:	99 1f       	adc	r25, r25
     ff0:	0a 94       	dec	r0
     ff2:	e2 f7       	brpl	.-8      	; 0xfec <MDIO_voidSetPinValue+0x1a2>
     ff4:	80 95       	com	r24
     ff6:	84 23       	and	r24, r20
     ff8:	18 96       	adiw	r26, 0x08	; 8
     ffa:	8c 93       	st	X, r24
     ffc:	18 97       	sbiw	r26, 0x08	; 8
     ffe:	2d c0       	rjmp	.+90     	; 0x105a <MDIO_voidSetPinValue+0x210>
			case GPIOC: DIO->PORTC &= ~(1 << copy_u8PinId);	break;
    1000:	a0 e3       	ldi	r26, 0x30	; 48
    1002:	b0 e0       	ldi	r27, 0x00	; 0
    1004:	e0 e3       	ldi	r30, 0x30	; 48
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	85 81       	ldd	r24, Z+5	; 0x05
    100a:	48 2f       	mov	r20, r24
    100c:	8a 81       	ldd	r24, Y+2	; 0x02
    100e:	28 2f       	mov	r18, r24
    1010:	30 e0       	ldi	r19, 0x00	; 0
    1012:	81 e0       	ldi	r24, 0x01	; 1
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	02 2e       	mov	r0, r18
    1018:	02 c0       	rjmp	.+4      	; 0x101e <MDIO_voidSetPinValue+0x1d4>
    101a:	88 0f       	add	r24, r24
    101c:	99 1f       	adc	r25, r25
    101e:	0a 94       	dec	r0
    1020:	e2 f7       	brpl	.-8      	; 0x101a <MDIO_voidSetPinValue+0x1d0>
    1022:	80 95       	com	r24
    1024:	84 23       	and	r24, r20
    1026:	15 96       	adiw	r26, 0x05	; 5
    1028:	8c 93       	st	X, r24
    102a:	15 97       	sbiw	r26, 0x05	; 5
    102c:	16 c0       	rjmp	.+44     	; 0x105a <MDIO_voidSetPinValue+0x210>
			case GPIOD: DIO->PORTD &= ~(1 << copy_u8PinId);	break;
    102e:	a0 e3       	ldi	r26, 0x30	; 48
    1030:	b0 e0       	ldi	r27, 0x00	; 0
    1032:	e0 e3       	ldi	r30, 0x30	; 48
    1034:	f0 e0       	ldi	r31, 0x00	; 0
    1036:	82 81       	ldd	r24, Z+2	; 0x02
    1038:	48 2f       	mov	r20, r24
    103a:	8a 81       	ldd	r24, Y+2	; 0x02
    103c:	28 2f       	mov	r18, r24
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	81 e0       	ldi	r24, 0x01	; 1
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	02 2e       	mov	r0, r18
    1046:	02 c0       	rjmp	.+4      	; 0x104c <MDIO_voidSetPinValue+0x202>
    1048:	88 0f       	add	r24, r24
    104a:	99 1f       	adc	r25, r25
    104c:	0a 94       	dec	r0
    104e:	e2 f7       	brpl	.-8      	; 0x1048 <MDIO_voidSetPinValue+0x1fe>
    1050:	80 95       	com	r24
    1052:	84 23       	and	r24, r20
    1054:	12 96       	adiw	r26, 0x02	; 2
    1056:	8c 93       	st	X, r24
    1058:	12 97       	sbiw	r26, 0x02	; 2
			default:										break;
		}
	}
}
    105a:	27 96       	adiw	r28, 0x07	; 7
    105c:	0f b6       	in	r0, 0x3f	; 63
    105e:	f8 94       	cli
    1060:	de bf       	out	0x3e, r29	; 62
    1062:	0f be       	out	0x3f, r0	; 63
    1064:	cd bf       	out	0x3d, r28	; 61
    1066:	cf 91       	pop	r28
    1068:	df 91       	pop	r29
    106a:	08 95       	ret

0000106c <MDIO_voidSetPortValue>:
/*============================ End_Function ============================*/
/*=========================== Start_Function ===========================*/
void MDIO_voidSetPortValue(u8 copy_u8PortId , u8 copy_u8Value)
{
    106c:	df 93       	push	r29
    106e:	cf 93       	push	r28
    1070:	00 d0       	rcall	.+0      	; 0x1072 <MDIO_voidSetPortValue+0x6>
    1072:	00 d0       	rcall	.+0      	; 0x1074 <MDIO_voidSetPortValue+0x8>
    1074:	cd b7       	in	r28, 0x3d	; 61
    1076:	de b7       	in	r29, 0x3e	; 62
    1078:	89 83       	std	Y+1, r24	; 0x01
    107a:	6a 83       	std	Y+2, r22	; 0x02
	 switch(copy_u8PortId)
    107c:	89 81       	ldd	r24, Y+1	; 0x01
    107e:	28 2f       	mov	r18, r24
    1080:	30 e0       	ldi	r19, 0x00	; 0
    1082:	3c 83       	std	Y+4, r19	; 0x04
    1084:	2b 83       	std	Y+3, r18	; 0x03
    1086:	8b 81       	ldd	r24, Y+3	; 0x03
    1088:	9c 81       	ldd	r25, Y+4	; 0x04
    108a:	81 30       	cpi	r24, 0x01	; 1
    108c:	91 05       	cpc	r25, r1
    108e:	d1 f0       	breq	.+52     	; 0x10c4 <MDIO_voidSetPortValue+0x58>
    1090:	2b 81       	ldd	r18, Y+3	; 0x03
    1092:	3c 81       	ldd	r19, Y+4	; 0x04
    1094:	22 30       	cpi	r18, 0x02	; 2
    1096:	31 05       	cpc	r19, r1
    1098:	2c f4       	brge	.+10     	; 0x10a4 <MDIO_voidSetPortValue+0x38>
    109a:	8b 81       	ldd	r24, Y+3	; 0x03
    109c:	9c 81       	ldd	r25, Y+4	; 0x04
    109e:	00 97       	sbiw	r24, 0x00	; 0
    10a0:	61 f0       	breq	.+24     	; 0x10ba <MDIO_voidSetPortValue+0x4e>
    10a2:	1e c0       	rjmp	.+60     	; 0x10e0 <MDIO_voidSetPortValue+0x74>
    10a4:	2b 81       	ldd	r18, Y+3	; 0x03
    10a6:	3c 81       	ldd	r19, Y+4	; 0x04
    10a8:	22 30       	cpi	r18, 0x02	; 2
    10aa:	31 05       	cpc	r19, r1
    10ac:	81 f0       	breq	.+32     	; 0x10ce <MDIO_voidSetPortValue+0x62>
    10ae:	8b 81       	ldd	r24, Y+3	; 0x03
    10b0:	9c 81       	ldd	r25, Y+4	; 0x04
    10b2:	83 30       	cpi	r24, 0x03	; 3
    10b4:	91 05       	cpc	r25, r1
    10b6:	81 f0       	breq	.+32     	; 0x10d8 <MDIO_voidSetPortValue+0x6c>
    10b8:	13 c0       	rjmp	.+38     	; 0x10e0 <MDIO_voidSetPortValue+0x74>
	 {
	 	 case GPIOA : DIO->PORTA = copy_u8Value;		break;
    10ba:	e0 e3       	ldi	r30, 0x30	; 48
    10bc:	f0 e0       	ldi	r31, 0x00	; 0
    10be:	8a 81       	ldd	r24, Y+2	; 0x02
    10c0:	83 87       	std	Z+11, r24	; 0x0b
    10c2:	0e c0       	rjmp	.+28     	; 0x10e0 <MDIO_voidSetPortValue+0x74>
	 	 case GPIOB : DIO->PORTB = copy_u8Value;		break;
    10c4:	e0 e3       	ldi	r30, 0x30	; 48
    10c6:	f0 e0       	ldi	r31, 0x00	; 0
    10c8:	8a 81       	ldd	r24, Y+2	; 0x02
    10ca:	80 87       	std	Z+8, r24	; 0x08
    10cc:	09 c0       	rjmp	.+18     	; 0x10e0 <MDIO_voidSetPortValue+0x74>
	 	 case GPIOC : DIO->PORTC = copy_u8Value;		break;
    10ce:	e0 e3       	ldi	r30, 0x30	; 48
    10d0:	f0 e0       	ldi	r31, 0x00	; 0
    10d2:	8a 81       	ldd	r24, Y+2	; 0x02
    10d4:	85 83       	std	Z+5, r24	; 0x05
    10d6:	04 c0       	rjmp	.+8      	; 0x10e0 <MDIO_voidSetPortValue+0x74>
	 	 case GPIOD : DIO->PORTD = copy_u8Value;		break;
    10d8:	e0 e3       	ldi	r30, 0x30	; 48
    10da:	f0 e0       	ldi	r31, 0x00	; 0
    10dc:	8a 81       	ldd	r24, Y+2	; 0x02
    10de:	82 83       	std	Z+2, r24	; 0x02
	 	 default:										break;
	 }
}
    10e0:	0f 90       	pop	r0
    10e2:	0f 90       	pop	r0
    10e4:	0f 90       	pop	r0
    10e6:	0f 90       	pop	r0
    10e8:	cf 91       	pop	r28
    10ea:	df 91       	pop	r29
    10ec:	08 95       	ret

000010ee <MDIO_u8GetPinValue>:
/*============================ End_Function ============================*/
/*=========================== Start_Function ===========================*/
u8 MDIO_u8GetPinValue(u8 copy_u8PortId , u8 copy_u8PinId)
{
    10ee:	df 93       	push	r29
    10f0:	cf 93       	push	r28
    10f2:	00 d0       	rcall	.+0      	; 0x10f4 <MDIO_u8GetPinValue+0x6>
    10f4:	00 d0       	rcall	.+0      	; 0x10f6 <MDIO_u8GetPinValue+0x8>
    10f6:	0f 92       	push	r0
    10f8:	cd b7       	in	r28, 0x3d	; 61
    10fa:	de b7       	in	r29, 0x3e	; 62
    10fc:	8a 83       	std	Y+2, r24	; 0x02
    10fe:	6b 83       	std	Y+3, r22	; 0x03
	 u8 Local_u8PinValue = 0;
    1100:	19 82       	std	Y+1, r1	; 0x01
	 switch(copy_u8PortId)
    1102:	8a 81       	ldd	r24, Y+2	; 0x02
    1104:	28 2f       	mov	r18, r24
    1106:	30 e0       	ldi	r19, 0x00	; 0
    1108:	3d 83       	std	Y+5, r19	; 0x05
    110a:	2c 83       	std	Y+4, r18	; 0x04
    110c:	4c 81       	ldd	r20, Y+4	; 0x04
    110e:	5d 81       	ldd	r21, Y+5	; 0x05
    1110:	41 30       	cpi	r20, 0x01	; 1
    1112:	51 05       	cpc	r21, r1
    1114:	41 f1       	breq	.+80     	; 0x1166 <MDIO_u8GetPinValue+0x78>
    1116:	8c 81       	ldd	r24, Y+4	; 0x04
    1118:	9d 81       	ldd	r25, Y+5	; 0x05
    111a:	82 30       	cpi	r24, 0x02	; 2
    111c:	91 05       	cpc	r25, r1
    111e:	34 f4       	brge	.+12     	; 0x112c <MDIO_u8GetPinValue+0x3e>
    1120:	2c 81       	ldd	r18, Y+4	; 0x04
    1122:	3d 81       	ldd	r19, Y+5	; 0x05
    1124:	21 15       	cp	r18, r1
    1126:	31 05       	cpc	r19, r1
    1128:	61 f0       	breq	.+24     	; 0x1142 <MDIO_u8GetPinValue+0x54>
    112a:	52 c0       	rjmp	.+164    	; 0x11d0 <MDIO_u8GetPinValue+0xe2>
    112c:	4c 81       	ldd	r20, Y+4	; 0x04
    112e:	5d 81       	ldd	r21, Y+5	; 0x05
    1130:	42 30       	cpi	r20, 0x02	; 2
    1132:	51 05       	cpc	r21, r1
    1134:	51 f1       	breq	.+84     	; 0x118a <MDIO_u8GetPinValue+0x9c>
    1136:	8c 81       	ldd	r24, Y+4	; 0x04
    1138:	9d 81       	ldd	r25, Y+5	; 0x05
    113a:	83 30       	cpi	r24, 0x03	; 3
    113c:	91 05       	cpc	r25, r1
    113e:	b9 f1       	breq	.+110    	; 0x11ae <MDIO_u8GetPinValue+0xc0>
    1140:	47 c0       	rjmp	.+142    	; 0x11d0 <MDIO_u8GetPinValue+0xe2>
	 {
		 case GPIOA: Local_u8PinValue =  GET_BIT(DIO->PINA, copy_u8PinId);	break;
    1142:	e0 e3       	ldi	r30, 0x30	; 48
    1144:	f0 e0       	ldi	r31, 0x00	; 0
    1146:	81 85       	ldd	r24, Z+9	; 0x09
    1148:	28 2f       	mov	r18, r24
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	8b 81       	ldd	r24, Y+3	; 0x03
    114e:	88 2f       	mov	r24, r24
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	a9 01       	movw	r20, r18
    1154:	02 c0       	rjmp	.+4      	; 0x115a <MDIO_u8GetPinValue+0x6c>
    1156:	55 95       	asr	r21
    1158:	47 95       	ror	r20
    115a:	8a 95       	dec	r24
    115c:	e2 f7       	brpl	.-8      	; 0x1156 <MDIO_u8GetPinValue+0x68>
    115e:	ca 01       	movw	r24, r20
    1160:	81 70       	andi	r24, 0x01	; 1
    1162:	89 83       	std	Y+1, r24	; 0x01
    1164:	35 c0       	rjmp	.+106    	; 0x11d0 <MDIO_u8GetPinValue+0xe2>
		 case GPIOB: Local_u8PinValue =  GET_BIT(DIO->PINB,copy_u8PinId); 	break;
    1166:	e0 e3       	ldi	r30, 0x30	; 48
    1168:	f0 e0       	ldi	r31, 0x00	; 0
    116a:	86 81       	ldd	r24, Z+6	; 0x06
    116c:	28 2f       	mov	r18, r24
    116e:	30 e0       	ldi	r19, 0x00	; 0
    1170:	8b 81       	ldd	r24, Y+3	; 0x03
    1172:	88 2f       	mov	r24, r24
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	a9 01       	movw	r20, r18
    1178:	02 c0       	rjmp	.+4      	; 0x117e <MDIO_u8GetPinValue+0x90>
    117a:	55 95       	asr	r21
    117c:	47 95       	ror	r20
    117e:	8a 95       	dec	r24
    1180:	e2 f7       	brpl	.-8      	; 0x117a <MDIO_u8GetPinValue+0x8c>
    1182:	ca 01       	movw	r24, r20
    1184:	81 70       	andi	r24, 0x01	; 1
    1186:	89 83       	std	Y+1, r24	; 0x01
    1188:	23 c0       	rjmp	.+70     	; 0x11d0 <MDIO_u8GetPinValue+0xe2>
		 case GPIOC: Local_u8PinValue =  GET_BIT(DIO->PINC,copy_u8PinId);	break;
    118a:	e0 e3       	ldi	r30, 0x30	; 48
    118c:	f0 e0       	ldi	r31, 0x00	; 0
    118e:	83 81       	ldd	r24, Z+3	; 0x03
    1190:	28 2f       	mov	r18, r24
    1192:	30 e0       	ldi	r19, 0x00	; 0
    1194:	8b 81       	ldd	r24, Y+3	; 0x03
    1196:	88 2f       	mov	r24, r24
    1198:	90 e0       	ldi	r25, 0x00	; 0
    119a:	a9 01       	movw	r20, r18
    119c:	02 c0       	rjmp	.+4      	; 0x11a2 <MDIO_u8GetPinValue+0xb4>
    119e:	55 95       	asr	r21
    11a0:	47 95       	ror	r20
    11a2:	8a 95       	dec	r24
    11a4:	e2 f7       	brpl	.-8      	; 0x119e <MDIO_u8GetPinValue+0xb0>
    11a6:	ca 01       	movw	r24, r20
    11a8:	81 70       	andi	r24, 0x01	; 1
    11aa:	89 83       	std	Y+1, r24	; 0x01
    11ac:	11 c0       	rjmp	.+34     	; 0x11d0 <MDIO_u8GetPinValue+0xe2>
		 case GPIOD: Local_u8PinValue =  GET_BIT(DIO->PIND,copy_u8PinId);	break;
    11ae:	e0 e3       	ldi	r30, 0x30	; 48
    11b0:	f0 e0       	ldi	r31, 0x00	; 0
    11b2:	80 81       	ld	r24, Z
    11b4:	28 2f       	mov	r18, r24
    11b6:	30 e0       	ldi	r19, 0x00	; 0
    11b8:	8b 81       	ldd	r24, Y+3	; 0x03
    11ba:	88 2f       	mov	r24, r24
    11bc:	90 e0       	ldi	r25, 0x00	; 0
    11be:	a9 01       	movw	r20, r18
    11c0:	02 c0       	rjmp	.+4      	; 0x11c6 <MDIO_u8GetPinValue+0xd8>
    11c2:	55 95       	asr	r21
    11c4:	47 95       	ror	r20
    11c6:	8a 95       	dec	r24
    11c8:	e2 f7       	brpl	.-8      	; 0x11c2 <MDIO_u8GetPinValue+0xd4>
    11ca:	ca 01       	movw	r24, r20
    11cc:	81 70       	andi	r24, 0x01	; 1
    11ce:	89 83       	std	Y+1, r24	; 0x01
		 default: 															break;
	 }
	return Local_u8PinValue;
    11d0:	89 81       	ldd	r24, Y+1	; 0x01
}
    11d2:	0f 90       	pop	r0
    11d4:	0f 90       	pop	r0
    11d6:	0f 90       	pop	r0
    11d8:	0f 90       	pop	r0
    11da:	0f 90       	pop	r0
    11dc:	cf 91       	pop	r28
    11de:	df 91       	pop	r29
    11e0:	08 95       	ret

000011e2 <HEEPROM_voidSendData>:
 * 2. Address byte  : 0bxAAA AAAA
 * 3. Data byte   	: 0b7654 3210
 * x: Don't care.
 *  */
void HEEPROM_voidSendData(u16 copy_u16Address, u8 copy_u8Data)
{
    11e2:	df 93       	push	r29
    11e4:	cf 93       	push	r28
    11e6:	cd b7       	in	r28, 0x3d	; 61
    11e8:	de b7       	in	r29, 0x3e	; 62
    11ea:	6f 97       	sbiw	r28, 0x1f	; 31
    11ec:	0f b6       	in	r0, 0x3f	; 63
    11ee:	f8 94       	cli
    11f0:	de bf       	out	0x3e, r29	; 62
    11f2:	0f be       	out	0x3f, r0	; 63
    11f4:	cd bf       	out	0x3d, r28	; 61
    11f6:	9e 8f       	std	Y+30, r25	; 0x1e
    11f8:	8d 8f       	std	Y+29, r24	; 0x1d
    11fa:	6f 8f       	std	Y+31, r22	; 0x1f
	 MDIO_voidSetPinValue(GPIOB, SS_PIN, HIGH);
    11fc:	81 e0       	ldi	r24, 0x01	; 1
    11fe:	64 e0       	ldi	r22, 0x04	; 4
    1200:	40 e0       	ldi	r20, 0x00	; 0
    1202:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
	 MDIO_voidSetPinValue(GPIOB, SS_PIN, LOW);
    1206:	81 e0       	ldi	r24, 0x01	; 1
    1208:	64 e0       	ldi	r22, 0x04	; 4
    120a:	41 e0       	ldi	r20, 0x01	; 1
    120c:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>

	 /* Write enable (WREN): 0b0000 0110 */
	 MSPI_voidSendData(0x06);
    1210:	86 e0       	ldi	r24, 0x06	; 6
    1212:	0e 94 b5 0b 	call	0x176a	; 0x176a <MSPI_voidSendData>

	 MDIO_voidSetPinValue(GPIOB, SS_PIN, HIGH);
    1216:	81 e0       	ldi	r24, 0x01	; 1
    1218:	64 e0       	ldi	r22, 0x04	; 4
    121a:	40 e0       	ldi	r20, 0x00	; 0
    121c:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
    1220:	80 e0       	ldi	r24, 0x00	; 0
    1222:	90 e0       	ldi	r25, 0x00	; 0
    1224:	a0 ea       	ldi	r26, 0xA0	; 160
    1226:	b0 e4       	ldi	r27, 0x40	; 64
    1228:	89 8f       	std	Y+25, r24	; 0x19
    122a:	9a 8f       	std	Y+26, r25	; 0x1a
    122c:	ab 8f       	std	Y+27, r26	; 0x1b
    122e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1230:	69 8d       	ldd	r22, Y+25	; 0x19
    1232:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1234:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1236:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1238:	20 e0       	ldi	r18, 0x00	; 0
    123a:	30 e0       	ldi	r19, 0x00	; 0
    123c:	4a ef       	ldi	r20, 0xFA	; 250
    123e:	54 e4       	ldi	r21, 0x44	; 68
    1240:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1244:	dc 01       	movw	r26, r24
    1246:	cb 01       	movw	r24, r22
    1248:	8d 8b       	std	Y+21, r24	; 0x15
    124a:	9e 8b       	std	Y+22, r25	; 0x16
    124c:	af 8b       	std	Y+23, r26	; 0x17
    124e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1250:	6d 89       	ldd	r22, Y+21	; 0x15
    1252:	7e 89       	ldd	r23, Y+22	; 0x16
    1254:	8f 89       	ldd	r24, Y+23	; 0x17
    1256:	98 8d       	ldd	r25, Y+24	; 0x18
    1258:	20 e0       	ldi	r18, 0x00	; 0
    125a:	30 e0       	ldi	r19, 0x00	; 0
    125c:	40 e8       	ldi	r20, 0x80	; 128
    125e:	5f e3       	ldi	r21, 0x3F	; 63
    1260:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1264:	88 23       	and	r24, r24
    1266:	2c f4       	brge	.+10     	; 0x1272 <HEEPROM_voidSendData+0x90>
		__ticks = 1;
    1268:	81 e0       	ldi	r24, 0x01	; 1
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	9c 8b       	std	Y+20, r25	; 0x14
    126e:	8b 8b       	std	Y+19, r24	; 0x13
    1270:	3f c0       	rjmp	.+126    	; 0x12f0 <HEEPROM_voidSendData+0x10e>
	else if (__tmp > 65535)
    1272:	6d 89       	ldd	r22, Y+21	; 0x15
    1274:	7e 89       	ldd	r23, Y+22	; 0x16
    1276:	8f 89       	ldd	r24, Y+23	; 0x17
    1278:	98 8d       	ldd	r25, Y+24	; 0x18
    127a:	20 e0       	ldi	r18, 0x00	; 0
    127c:	3f ef       	ldi	r19, 0xFF	; 255
    127e:	4f e7       	ldi	r20, 0x7F	; 127
    1280:	57 e4       	ldi	r21, 0x47	; 71
    1282:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1286:	18 16       	cp	r1, r24
    1288:	4c f5       	brge	.+82     	; 0x12dc <HEEPROM_voidSendData+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    128a:	69 8d       	ldd	r22, Y+25	; 0x19
    128c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    128e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1290:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1292:	20 e0       	ldi	r18, 0x00	; 0
    1294:	30 e0       	ldi	r19, 0x00	; 0
    1296:	40 e2       	ldi	r20, 0x20	; 32
    1298:	51 e4       	ldi	r21, 0x41	; 65
    129a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    129e:	dc 01       	movw	r26, r24
    12a0:	cb 01       	movw	r24, r22
    12a2:	bc 01       	movw	r22, r24
    12a4:	cd 01       	movw	r24, r26
    12a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12aa:	dc 01       	movw	r26, r24
    12ac:	cb 01       	movw	r24, r22
    12ae:	9c 8b       	std	Y+20, r25	; 0x14
    12b0:	8b 8b       	std	Y+19, r24	; 0x13
    12b2:	0f c0       	rjmp	.+30     	; 0x12d2 <HEEPROM_voidSendData+0xf0>
    12b4:	88 ec       	ldi	r24, 0xC8	; 200
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	9a 8b       	std	Y+18, r25	; 0x12
    12ba:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    12bc:	89 89       	ldd	r24, Y+17	; 0x11
    12be:	9a 89       	ldd	r25, Y+18	; 0x12
    12c0:	01 97       	sbiw	r24, 0x01	; 1
    12c2:	f1 f7       	brne	.-4      	; 0x12c0 <HEEPROM_voidSendData+0xde>
    12c4:	9a 8b       	std	Y+18, r25	; 0x12
    12c6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12c8:	8b 89       	ldd	r24, Y+19	; 0x13
    12ca:	9c 89       	ldd	r25, Y+20	; 0x14
    12cc:	01 97       	sbiw	r24, 0x01	; 1
    12ce:	9c 8b       	std	Y+20, r25	; 0x14
    12d0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12d2:	8b 89       	ldd	r24, Y+19	; 0x13
    12d4:	9c 89       	ldd	r25, Y+20	; 0x14
    12d6:	00 97       	sbiw	r24, 0x00	; 0
    12d8:	69 f7       	brne	.-38     	; 0x12b4 <HEEPROM_voidSendData+0xd2>
    12da:	14 c0       	rjmp	.+40     	; 0x1304 <HEEPROM_voidSendData+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12dc:	6d 89       	ldd	r22, Y+21	; 0x15
    12de:	7e 89       	ldd	r23, Y+22	; 0x16
    12e0:	8f 89       	ldd	r24, Y+23	; 0x17
    12e2:	98 8d       	ldd	r25, Y+24	; 0x18
    12e4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12e8:	dc 01       	movw	r26, r24
    12ea:	cb 01       	movw	r24, r22
    12ec:	9c 8b       	std	Y+20, r25	; 0x14
    12ee:	8b 8b       	std	Y+19, r24	; 0x13
    12f0:	8b 89       	ldd	r24, Y+19	; 0x13
    12f2:	9c 89       	ldd	r25, Y+20	; 0x14
    12f4:	98 8b       	std	Y+16, r25	; 0x10
    12f6:	8f 87       	std	Y+15, r24	; 0x0f
    12f8:	8f 85       	ldd	r24, Y+15	; 0x0f
    12fa:	98 89       	ldd	r25, Y+16	; 0x10
    12fc:	01 97       	sbiw	r24, 0x01	; 1
    12fe:	f1 f7       	brne	.-4      	; 0x12fc <HEEPROM_voidSendData+0x11a>
    1300:	98 8b       	std	Y+16, r25	; 0x10
    1302:	8f 87       	std	Y+15, r24	; 0x0f

     _delay_ms(5);

	 MDIO_voidSetPinValue(GPIOB, SS_PIN, LOW);
    1304:	81 e0       	ldi	r24, 0x01	; 1
    1306:	64 e0       	ldi	r22, 0x04	; 4
    1308:	41 e0       	ldi	r20, 0x01	; 1
    130a:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>

	 /* Write data to memory array beginning at selected address
	  *  Instruction Format: 0b0000 0010 */
	 MSPI_voidSendData(0x02);
    130e:	82 e0       	ldi	r24, 0x02	; 2
    1310:	0e 94 b5 0b 	call	0x176a	; 0x176a <MSPI_voidSendData>

	 MSPI_voidSendData(copy_u16Address);
    1314:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1316:	0e 94 b5 0b 	call	0x176a	; 0x176a <MSPI_voidSendData>
	 MSPI_voidSendData(copy_u8Data);
    131a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    131c:	0e 94 b5 0b 	call	0x176a	; 0x176a <MSPI_voidSendData>

	 MDIO_voidSetPinValue(GPIOB, SS_PIN, HIGH);
    1320:	81 e0       	ldi	r24, 0x01	; 1
    1322:	64 e0       	ldi	r22, 0x04	; 4
    1324:	40 e0       	ldi	r20, 0x00	; 0
    1326:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
    132a:	80 e0       	ldi	r24, 0x00	; 0
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	a0 ea       	ldi	r26, 0xA0	; 160
    1330:	b0 e4       	ldi	r27, 0x40	; 64
    1332:	8b 87       	std	Y+11, r24	; 0x0b
    1334:	9c 87       	std	Y+12, r25	; 0x0c
    1336:	ad 87       	std	Y+13, r26	; 0x0d
    1338:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    133a:	6b 85       	ldd	r22, Y+11	; 0x0b
    133c:	7c 85       	ldd	r23, Y+12	; 0x0c
    133e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1340:	9e 85       	ldd	r25, Y+14	; 0x0e
    1342:	20 e0       	ldi	r18, 0x00	; 0
    1344:	30 e0       	ldi	r19, 0x00	; 0
    1346:	4a ef       	ldi	r20, 0xFA	; 250
    1348:	54 e4       	ldi	r21, 0x44	; 68
    134a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    134e:	dc 01       	movw	r26, r24
    1350:	cb 01       	movw	r24, r22
    1352:	8f 83       	std	Y+7, r24	; 0x07
    1354:	98 87       	std	Y+8, r25	; 0x08
    1356:	a9 87       	std	Y+9, r26	; 0x09
    1358:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    135a:	6f 81       	ldd	r22, Y+7	; 0x07
    135c:	78 85       	ldd	r23, Y+8	; 0x08
    135e:	89 85       	ldd	r24, Y+9	; 0x09
    1360:	9a 85       	ldd	r25, Y+10	; 0x0a
    1362:	20 e0       	ldi	r18, 0x00	; 0
    1364:	30 e0       	ldi	r19, 0x00	; 0
    1366:	40 e8       	ldi	r20, 0x80	; 128
    1368:	5f e3       	ldi	r21, 0x3F	; 63
    136a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    136e:	88 23       	and	r24, r24
    1370:	2c f4       	brge	.+10     	; 0x137c <HEEPROM_voidSendData+0x19a>
		__ticks = 1;
    1372:	81 e0       	ldi	r24, 0x01	; 1
    1374:	90 e0       	ldi	r25, 0x00	; 0
    1376:	9e 83       	std	Y+6, r25	; 0x06
    1378:	8d 83       	std	Y+5, r24	; 0x05
    137a:	3f c0       	rjmp	.+126    	; 0x13fa <HEEPROM_voidSendData+0x218>
	else if (__tmp > 65535)
    137c:	6f 81       	ldd	r22, Y+7	; 0x07
    137e:	78 85       	ldd	r23, Y+8	; 0x08
    1380:	89 85       	ldd	r24, Y+9	; 0x09
    1382:	9a 85       	ldd	r25, Y+10	; 0x0a
    1384:	20 e0       	ldi	r18, 0x00	; 0
    1386:	3f ef       	ldi	r19, 0xFF	; 255
    1388:	4f e7       	ldi	r20, 0x7F	; 127
    138a:	57 e4       	ldi	r21, 0x47	; 71
    138c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1390:	18 16       	cp	r1, r24
    1392:	4c f5       	brge	.+82     	; 0x13e6 <HEEPROM_voidSendData+0x204>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1394:	6b 85       	ldd	r22, Y+11	; 0x0b
    1396:	7c 85       	ldd	r23, Y+12	; 0x0c
    1398:	8d 85       	ldd	r24, Y+13	; 0x0d
    139a:	9e 85       	ldd	r25, Y+14	; 0x0e
    139c:	20 e0       	ldi	r18, 0x00	; 0
    139e:	30 e0       	ldi	r19, 0x00	; 0
    13a0:	40 e2       	ldi	r20, 0x20	; 32
    13a2:	51 e4       	ldi	r21, 0x41	; 65
    13a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13a8:	dc 01       	movw	r26, r24
    13aa:	cb 01       	movw	r24, r22
    13ac:	bc 01       	movw	r22, r24
    13ae:	cd 01       	movw	r24, r26
    13b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13b4:	dc 01       	movw	r26, r24
    13b6:	cb 01       	movw	r24, r22
    13b8:	9e 83       	std	Y+6, r25	; 0x06
    13ba:	8d 83       	std	Y+5, r24	; 0x05
    13bc:	0f c0       	rjmp	.+30     	; 0x13dc <HEEPROM_voidSendData+0x1fa>
    13be:	88 ec       	ldi	r24, 0xC8	; 200
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	9c 83       	std	Y+4, r25	; 0x04
    13c4:	8b 83       	std	Y+3, r24	; 0x03
    13c6:	8b 81       	ldd	r24, Y+3	; 0x03
    13c8:	9c 81       	ldd	r25, Y+4	; 0x04
    13ca:	01 97       	sbiw	r24, 0x01	; 1
    13cc:	f1 f7       	brne	.-4      	; 0x13ca <HEEPROM_voidSendData+0x1e8>
    13ce:	9c 83       	std	Y+4, r25	; 0x04
    13d0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13d2:	8d 81       	ldd	r24, Y+5	; 0x05
    13d4:	9e 81       	ldd	r25, Y+6	; 0x06
    13d6:	01 97       	sbiw	r24, 0x01	; 1
    13d8:	9e 83       	std	Y+6, r25	; 0x06
    13da:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13dc:	8d 81       	ldd	r24, Y+5	; 0x05
    13de:	9e 81       	ldd	r25, Y+6	; 0x06
    13e0:	00 97       	sbiw	r24, 0x00	; 0
    13e2:	69 f7       	brne	.-38     	; 0x13be <HEEPROM_voidSendData+0x1dc>
    13e4:	14 c0       	rjmp	.+40     	; 0x140e <HEEPROM_voidSendData+0x22c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13e6:	6f 81       	ldd	r22, Y+7	; 0x07
    13e8:	78 85       	ldd	r23, Y+8	; 0x08
    13ea:	89 85       	ldd	r24, Y+9	; 0x09
    13ec:	9a 85       	ldd	r25, Y+10	; 0x0a
    13ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13f2:	dc 01       	movw	r26, r24
    13f4:	cb 01       	movw	r24, r22
    13f6:	9e 83       	std	Y+6, r25	; 0x06
    13f8:	8d 83       	std	Y+5, r24	; 0x05
    13fa:	8d 81       	ldd	r24, Y+5	; 0x05
    13fc:	9e 81       	ldd	r25, Y+6	; 0x06
    13fe:	9a 83       	std	Y+2, r25	; 0x02
    1400:	89 83       	std	Y+1, r24	; 0x01
    1402:	89 81       	ldd	r24, Y+1	; 0x01
    1404:	9a 81       	ldd	r25, Y+2	; 0x02
    1406:	01 97       	sbiw	r24, 0x01	; 1
    1408:	f1 f7       	brne	.-4      	; 0x1406 <HEEPROM_voidSendData+0x224>
    140a:	9a 83       	std	Y+2, r25	; 0x02
    140c:	89 83       	std	Y+1, r24	; 0x01

	 _delay_ms(5);
}
    140e:	6f 96       	adiw	r28, 0x1f	; 31
    1410:	0f b6       	in	r0, 0x3f	; 63
    1412:	f8 94       	cli
    1414:	de bf       	out	0x3e, r29	; 62
    1416:	0f be       	out	0x3f, r0	; 63
    1418:	cd bf       	out	0x3d, r28	; 61
    141a:	cf 91       	pop	r28
    141c:	df 91       	pop	r29
    141e:	08 95       	ret

00001420 <HEEPROM_voidSend10Bytes>:

void HEEPROM_voidSend10Bytes(u16 copy_u16Address, u8 *copy_u8Data)
{
    1420:	df 93       	push	r29
    1422:	cf 93       	push	r28
    1424:	cd b7       	in	r28, 0x3d	; 61
    1426:	de b7       	in	r29, 0x3e	; 62
    1428:	a1 97       	sbiw	r28, 0x21	; 33
    142a:	0f b6       	in	r0, 0x3f	; 63
    142c:	f8 94       	cli
    142e:	de bf       	out	0x3e, r29	; 62
    1430:	0f be       	out	0x3f, r0	; 63
    1432:	cd bf       	out	0x3d, r28	; 61
    1434:	9f 8f       	std	Y+31, r25	; 0x1f
    1436:	8e 8f       	std	Y+30, r24	; 0x1e
    1438:	79 a3       	std	Y+33, r23	; 0x21
    143a:	68 a3       	std	Y+32, r22	; 0x20
	MDIO_voidSetPinValue(GPIOB, SS_PIN, HIGH);
    143c:	81 e0       	ldi	r24, 0x01	; 1
    143e:	64 e0       	ldi	r22, 0x04	; 4
    1440:	40 e0       	ldi	r20, 0x00	; 0
    1442:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(GPIOB, SS_PIN, LOW);
    1446:	81 e0       	ldi	r24, 0x01	; 1
    1448:	64 e0       	ldi	r22, 0x04	; 4
    144a:	41 e0       	ldi	r20, 0x01	; 1
    144c:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>

	/* Write enable (WREN): 0b0000 0110 */
	MSPI_voidSendData(0x06);
    1450:	86 e0       	ldi	r24, 0x06	; 6
    1452:	0e 94 b5 0b 	call	0x176a	; 0x176a <MSPI_voidSendData>

	MDIO_voidSetPinValue(GPIOB, SS_PIN, HIGH);
    1456:	81 e0       	ldi	r24, 0x01	; 1
    1458:	64 e0       	ldi	r22, 0x04	; 4
    145a:	40 e0       	ldi	r20, 0x00	; 0
    145c:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
    1460:	80 e0       	ldi	r24, 0x00	; 0
    1462:	90 e0       	ldi	r25, 0x00	; 0
    1464:	a0 ea       	ldi	r26, 0xA0	; 160
    1466:	b0 e4       	ldi	r27, 0x40	; 64
    1468:	89 8f       	std	Y+25, r24	; 0x19
    146a:	9a 8f       	std	Y+26, r25	; 0x1a
    146c:	ab 8f       	std	Y+27, r26	; 0x1b
    146e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1470:	69 8d       	ldd	r22, Y+25	; 0x19
    1472:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1474:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1476:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1478:	20 e0       	ldi	r18, 0x00	; 0
    147a:	30 e0       	ldi	r19, 0x00	; 0
    147c:	4a ef       	ldi	r20, 0xFA	; 250
    147e:	54 e4       	ldi	r21, 0x44	; 68
    1480:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1484:	dc 01       	movw	r26, r24
    1486:	cb 01       	movw	r24, r22
    1488:	8d 8b       	std	Y+21, r24	; 0x15
    148a:	9e 8b       	std	Y+22, r25	; 0x16
    148c:	af 8b       	std	Y+23, r26	; 0x17
    148e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1490:	6d 89       	ldd	r22, Y+21	; 0x15
    1492:	7e 89       	ldd	r23, Y+22	; 0x16
    1494:	8f 89       	ldd	r24, Y+23	; 0x17
    1496:	98 8d       	ldd	r25, Y+24	; 0x18
    1498:	20 e0       	ldi	r18, 0x00	; 0
    149a:	30 e0       	ldi	r19, 0x00	; 0
    149c:	40 e8       	ldi	r20, 0x80	; 128
    149e:	5f e3       	ldi	r21, 0x3F	; 63
    14a0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    14a4:	88 23       	and	r24, r24
    14a6:	2c f4       	brge	.+10     	; 0x14b2 <HEEPROM_voidSend10Bytes+0x92>
		__ticks = 1;
    14a8:	81 e0       	ldi	r24, 0x01	; 1
    14aa:	90 e0       	ldi	r25, 0x00	; 0
    14ac:	9c 8b       	std	Y+20, r25	; 0x14
    14ae:	8b 8b       	std	Y+19, r24	; 0x13
    14b0:	3f c0       	rjmp	.+126    	; 0x1530 <HEEPROM_voidSend10Bytes+0x110>
	else if (__tmp > 65535)
    14b2:	6d 89       	ldd	r22, Y+21	; 0x15
    14b4:	7e 89       	ldd	r23, Y+22	; 0x16
    14b6:	8f 89       	ldd	r24, Y+23	; 0x17
    14b8:	98 8d       	ldd	r25, Y+24	; 0x18
    14ba:	20 e0       	ldi	r18, 0x00	; 0
    14bc:	3f ef       	ldi	r19, 0xFF	; 255
    14be:	4f e7       	ldi	r20, 0x7F	; 127
    14c0:	57 e4       	ldi	r21, 0x47	; 71
    14c2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    14c6:	18 16       	cp	r1, r24
    14c8:	4c f5       	brge	.+82     	; 0x151c <HEEPROM_voidSend10Bytes+0xfc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14ca:	69 8d       	ldd	r22, Y+25	; 0x19
    14cc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    14ce:	8b 8d       	ldd	r24, Y+27	; 0x1b
    14d0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    14d2:	20 e0       	ldi	r18, 0x00	; 0
    14d4:	30 e0       	ldi	r19, 0x00	; 0
    14d6:	40 e2       	ldi	r20, 0x20	; 32
    14d8:	51 e4       	ldi	r21, 0x41	; 65
    14da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14de:	dc 01       	movw	r26, r24
    14e0:	cb 01       	movw	r24, r22
    14e2:	bc 01       	movw	r22, r24
    14e4:	cd 01       	movw	r24, r26
    14e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14ea:	dc 01       	movw	r26, r24
    14ec:	cb 01       	movw	r24, r22
    14ee:	9c 8b       	std	Y+20, r25	; 0x14
    14f0:	8b 8b       	std	Y+19, r24	; 0x13
    14f2:	0f c0       	rjmp	.+30     	; 0x1512 <HEEPROM_voidSend10Bytes+0xf2>
    14f4:	88 ec       	ldi	r24, 0xC8	; 200
    14f6:	90 e0       	ldi	r25, 0x00	; 0
    14f8:	9a 8b       	std	Y+18, r25	; 0x12
    14fa:	89 8b       	std	Y+17, r24	; 0x11
    14fc:	89 89       	ldd	r24, Y+17	; 0x11
    14fe:	9a 89       	ldd	r25, Y+18	; 0x12
    1500:	01 97       	sbiw	r24, 0x01	; 1
    1502:	f1 f7       	brne	.-4      	; 0x1500 <HEEPROM_voidSend10Bytes+0xe0>
    1504:	9a 8b       	std	Y+18, r25	; 0x12
    1506:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1508:	8b 89       	ldd	r24, Y+19	; 0x13
    150a:	9c 89       	ldd	r25, Y+20	; 0x14
    150c:	01 97       	sbiw	r24, 0x01	; 1
    150e:	9c 8b       	std	Y+20, r25	; 0x14
    1510:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1512:	8b 89       	ldd	r24, Y+19	; 0x13
    1514:	9c 89       	ldd	r25, Y+20	; 0x14
    1516:	00 97       	sbiw	r24, 0x00	; 0
    1518:	69 f7       	brne	.-38     	; 0x14f4 <HEEPROM_voidSend10Bytes+0xd4>
    151a:	14 c0       	rjmp	.+40     	; 0x1544 <HEEPROM_voidSend10Bytes+0x124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    151c:	6d 89       	ldd	r22, Y+21	; 0x15
    151e:	7e 89       	ldd	r23, Y+22	; 0x16
    1520:	8f 89       	ldd	r24, Y+23	; 0x17
    1522:	98 8d       	ldd	r25, Y+24	; 0x18
    1524:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1528:	dc 01       	movw	r26, r24
    152a:	cb 01       	movw	r24, r22
    152c:	9c 8b       	std	Y+20, r25	; 0x14
    152e:	8b 8b       	std	Y+19, r24	; 0x13
    1530:	8b 89       	ldd	r24, Y+19	; 0x13
    1532:	9c 89       	ldd	r25, Y+20	; 0x14
    1534:	98 8b       	std	Y+16, r25	; 0x10
    1536:	8f 87       	std	Y+15, r24	; 0x0f
    1538:	8f 85       	ldd	r24, Y+15	; 0x0f
    153a:	98 89       	ldd	r25, Y+16	; 0x10
    153c:	01 97       	sbiw	r24, 0x01	; 1
    153e:	f1 f7       	brne	.-4      	; 0x153c <HEEPROM_voidSend10Bytes+0x11c>
    1540:	98 8b       	std	Y+16, r25	; 0x10
    1542:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(5);
	MDIO_voidSetPinValue(GPIOB, SS_PIN, LOW);
    1544:	81 e0       	ldi	r24, 0x01	; 1
    1546:	64 e0       	ldi	r22, 0x04	; 4
    1548:	41 e0       	ldi	r20, 0x01	; 1
    154a:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>

	/* Write data to memory array beginning at selected address
	 * Instruction Format: 0b0000 0010 */
	MSPI_voidSendData(0x02);
    154e:	82 e0       	ldi	r24, 0x02	; 2
    1550:	0e 94 b5 0b 	call	0x176a	; 0x176a <MSPI_voidSendData>

	MSPI_voidSendData(copy_u16Address);
    1554:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1556:	0e 94 b5 0b 	call	0x176a	; 0x176a <MSPI_voidSendData>

	for(u8 i = 0; i <= 9; i++)
    155a:	1d 8e       	std	Y+29, r1	; 0x1d
    155c:	0e c0       	rjmp	.+28     	; 0x157a <HEEPROM_voidSend10Bytes+0x15a>
	{
		MSPI_voidSendData(copy_u8Data[i]);
    155e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1560:	28 2f       	mov	r18, r24
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	88 a1       	ldd	r24, Y+32	; 0x20
    1566:	99 a1       	ldd	r25, Y+33	; 0x21
    1568:	fc 01       	movw	r30, r24
    156a:	e2 0f       	add	r30, r18
    156c:	f3 1f       	adc	r31, r19
    156e:	80 81       	ld	r24, Z
    1570:	0e 94 b5 0b 	call	0x176a	; 0x176a <MSPI_voidSendData>
	 * Instruction Format: 0b0000 0010 */
	MSPI_voidSendData(0x02);

	MSPI_voidSendData(copy_u16Address);

	for(u8 i = 0; i <= 9; i++)
    1574:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1576:	8f 5f       	subi	r24, 0xFF	; 255
    1578:	8d 8f       	std	Y+29, r24	; 0x1d
    157a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    157c:	8a 30       	cpi	r24, 0x0A	; 10
    157e:	78 f3       	brcs	.-34     	; 0x155e <HEEPROM_voidSend10Bytes+0x13e>
	{
		MSPI_voidSendData(copy_u8Data[i]);
	}

	MDIO_voidSetPinValue(GPIOB, SS_PIN, HIGH);
    1580:	81 e0       	ldi	r24, 0x01	; 1
    1582:	64 e0       	ldi	r22, 0x04	; 4
    1584:	40 e0       	ldi	r20, 0x00	; 0
    1586:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
    158a:	80 e0       	ldi	r24, 0x00	; 0
    158c:	90 e0       	ldi	r25, 0x00	; 0
    158e:	a0 ea       	ldi	r26, 0xA0	; 160
    1590:	b0 e4       	ldi	r27, 0x40	; 64
    1592:	8b 87       	std	Y+11, r24	; 0x0b
    1594:	9c 87       	std	Y+12, r25	; 0x0c
    1596:	ad 87       	std	Y+13, r26	; 0x0d
    1598:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    159a:	6b 85       	ldd	r22, Y+11	; 0x0b
    159c:	7c 85       	ldd	r23, Y+12	; 0x0c
    159e:	8d 85       	ldd	r24, Y+13	; 0x0d
    15a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    15a2:	20 e0       	ldi	r18, 0x00	; 0
    15a4:	30 e0       	ldi	r19, 0x00	; 0
    15a6:	4a ef       	ldi	r20, 0xFA	; 250
    15a8:	54 e4       	ldi	r21, 0x44	; 68
    15aa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15ae:	dc 01       	movw	r26, r24
    15b0:	cb 01       	movw	r24, r22
    15b2:	8f 83       	std	Y+7, r24	; 0x07
    15b4:	98 87       	std	Y+8, r25	; 0x08
    15b6:	a9 87       	std	Y+9, r26	; 0x09
    15b8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    15ba:	6f 81       	ldd	r22, Y+7	; 0x07
    15bc:	78 85       	ldd	r23, Y+8	; 0x08
    15be:	89 85       	ldd	r24, Y+9	; 0x09
    15c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    15c2:	20 e0       	ldi	r18, 0x00	; 0
    15c4:	30 e0       	ldi	r19, 0x00	; 0
    15c6:	40 e8       	ldi	r20, 0x80	; 128
    15c8:	5f e3       	ldi	r21, 0x3F	; 63
    15ca:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    15ce:	88 23       	and	r24, r24
    15d0:	2c f4       	brge	.+10     	; 0x15dc <HEEPROM_voidSend10Bytes+0x1bc>
		__ticks = 1;
    15d2:	81 e0       	ldi	r24, 0x01	; 1
    15d4:	90 e0       	ldi	r25, 0x00	; 0
    15d6:	9e 83       	std	Y+6, r25	; 0x06
    15d8:	8d 83       	std	Y+5, r24	; 0x05
    15da:	3f c0       	rjmp	.+126    	; 0x165a <HEEPROM_voidSend10Bytes+0x23a>
	else if (__tmp > 65535)
    15dc:	6f 81       	ldd	r22, Y+7	; 0x07
    15de:	78 85       	ldd	r23, Y+8	; 0x08
    15e0:	89 85       	ldd	r24, Y+9	; 0x09
    15e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    15e4:	20 e0       	ldi	r18, 0x00	; 0
    15e6:	3f ef       	ldi	r19, 0xFF	; 255
    15e8:	4f e7       	ldi	r20, 0x7F	; 127
    15ea:	57 e4       	ldi	r21, 0x47	; 71
    15ec:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15f0:	18 16       	cp	r1, r24
    15f2:	4c f5       	brge	.+82     	; 0x1646 <HEEPROM_voidSend10Bytes+0x226>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15f4:	6b 85       	ldd	r22, Y+11	; 0x0b
    15f6:	7c 85       	ldd	r23, Y+12	; 0x0c
    15f8:	8d 85       	ldd	r24, Y+13	; 0x0d
    15fa:	9e 85       	ldd	r25, Y+14	; 0x0e
    15fc:	20 e0       	ldi	r18, 0x00	; 0
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	40 e2       	ldi	r20, 0x20	; 32
    1602:	51 e4       	ldi	r21, 0x41	; 65
    1604:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1608:	dc 01       	movw	r26, r24
    160a:	cb 01       	movw	r24, r22
    160c:	bc 01       	movw	r22, r24
    160e:	cd 01       	movw	r24, r26
    1610:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1614:	dc 01       	movw	r26, r24
    1616:	cb 01       	movw	r24, r22
    1618:	9e 83       	std	Y+6, r25	; 0x06
    161a:	8d 83       	std	Y+5, r24	; 0x05
    161c:	0f c0       	rjmp	.+30     	; 0x163c <HEEPROM_voidSend10Bytes+0x21c>
    161e:	88 ec       	ldi	r24, 0xC8	; 200
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	9c 83       	std	Y+4, r25	; 0x04
    1624:	8b 83       	std	Y+3, r24	; 0x03
    1626:	8b 81       	ldd	r24, Y+3	; 0x03
    1628:	9c 81       	ldd	r25, Y+4	; 0x04
    162a:	01 97       	sbiw	r24, 0x01	; 1
    162c:	f1 f7       	brne	.-4      	; 0x162a <HEEPROM_voidSend10Bytes+0x20a>
    162e:	9c 83       	std	Y+4, r25	; 0x04
    1630:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1632:	8d 81       	ldd	r24, Y+5	; 0x05
    1634:	9e 81       	ldd	r25, Y+6	; 0x06
    1636:	01 97       	sbiw	r24, 0x01	; 1
    1638:	9e 83       	std	Y+6, r25	; 0x06
    163a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    163c:	8d 81       	ldd	r24, Y+5	; 0x05
    163e:	9e 81       	ldd	r25, Y+6	; 0x06
    1640:	00 97       	sbiw	r24, 0x00	; 0
    1642:	69 f7       	brne	.-38     	; 0x161e <HEEPROM_voidSend10Bytes+0x1fe>
    1644:	14 c0       	rjmp	.+40     	; 0x166e <HEEPROM_voidSend10Bytes+0x24e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1646:	6f 81       	ldd	r22, Y+7	; 0x07
    1648:	78 85       	ldd	r23, Y+8	; 0x08
    164a:	89 85       	ldd	r24, Y+9	; 0x09
    164c:	9a 85       	ldd	r25, Y+10	; 0x0a
    164e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1652:	dc 01       	movw	r26, r24
    1654:	cb 01       	movw	r24, r22
    1656:	9e 83       	std	Y+6, r25	; 0x06
    1658:	8d 83       	std	Y+5, r24	; 0x05
    165a:	8d 81       	ldd	r24, Y+5	; 0x05
    165c:	9e 81       	ldd	r25, Y+6	; 0x06
    165e:	9a 83       	std	Y+2, r25	; 0x02
    1660:	89 83       	std	Y+1, r24	; 0x01
    1662:	89 81       	ldd	r24, Y+1	; 0x01
    1664:	9a 81       	ldd	r25, Y+2	; 0x02
    1666:	01 97       	sbiw	r24, 0x01	; 1
    1668:	f1 f7       	brne	.-4      	; 0x1666 <HEEPROM_voidSend10Bytes+0x246>
    166a:	9a 83       	std	Y+2, r25	; 0x02
    166c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(5);
}
    166e:	a1 96       	adiw	r28, 0x21	; 33
    1670:	0f b6       	in	r0, 0x3f	; 63
    1672:	f8 94       	cli
    1674:	de bf       	out	0x3e, r29	; 62
    1676:	0f be       	out	0x3f, r0	; 63
    1678:	cd bf       	out	0x3d, r28	; 61
    167a:	cf 91       	pop	r28
    167c:	df 91       	pop	r29
    167e:	08 95       	ret

00001680 <HEEPROM_u8ReadData>:

u8 HEEPROM_u8ReadData(u16 copy_u16Address)
{
    1680:	df 93       	push	r29
    1682:	cf 93       	push	r28
    1684:	00 d0       	rcall	.+0      	; 0x1686 <HEEPROM_u8ReadData+0x6>
    1686:	00 d0       	rcall	.+0      	; 0x1688 <HEEPROM_u8ReadData+0x8>
    1688:	cd b7       	in	r28, 0x3d	; 61
    168a:	de b7       	in	r29, 0x3e	; 62
    168c:	9c 83       	std	Y+4, r25	; 0x04
    168e:	8b 83       	std	Y+3, r24	; 0x03
	u8 Local_u8Dummy = 0xFF;
    1690:	8f ef       	ldi	r24, 0xFF	; 255
    1692:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8Data;

	MDIO_voidSetPinValue(GPIOB, SS_PIN, HIGH);
    1694:	81 e0       	ldi	r24, 0x01	; 1
    1696:	64 e0       	ldi	r22, 0x04	; 4
    1698:	40 e0       	ldi	r20, 0x00	; 0
    169a:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
	MDIO_voidSetPinValue(GPIOB, SS_PIN, LOW);
    169e:	81 e0       	ldi	r24, 0x01	; 1
    16a0:	64 e0       	ldi	r22, 0x04	; 4
    16a2:	41 e0       	ldi	r20, 0x01	; 1
    16a4:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>

	/* Read data from memory array beginning at selected address
	 * Instruction Format: 0b0000 0011 */
	MSPI_voidSendData(0x03);
    16a8:	83 e0       	ldi	r24, 0x03	; 3
    16aa:	0e 94 b5 0b 	call	0x176a	; 0x176a <MSPI_voidSendData>

	MSPI_voidSendData(copy_u16Address);
    16ae:	8b 81       	ldd	r24, Y+3	; 0x03
    16b0:	0e 94 b5 0b 	call	0x176a	; 0x176a <MSPI_voidSendData>
	/* Send dummy data to receive from the EEPROM */
	MSPI_voidSendData(Local_u8Dummy);
    16b4:	8a 81       	ldd	r24, Y+2	; 0x02
    16b6:	0e 94 b5 0b 	call	0x176a	; 0x176a <MSPI_voidSendData>

	Local_u8Data = MSPI_voidRecieveData();
    16ba:	0e 94 c8 0b 	call	0x1790	; 0x1790 <MSPI_voidRecieveData>
    16be:	89 83       	std	Y+1, r24	; 0x01
	MDIO_voidSetPinValue(GPIOB, SS_PIN, HIGH);
    16c0:	81 e0       	ldi	r24, 0x01	; 1
    16c2:	64 e0       	ldi	r22, 0x04	; 4
    16c4:	40 e0       	ldi	r20, 0x00	; 0
    16c6:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>

	return Local_u8Data;
    16ca:	89 81       	ldd	r24, Y+1	; 0x01
}
    16cc:	0f 90       	pop	r0
    16ce:	0f 90       	pop	r0
    16d0:	0f 90       	pop	r0
    16d2:	0f 90       	pop	r0
    16d4:	cf 91       	pop	r28
    16d6:	df 91       	pop	r29
    16d8:	08 95       	ret

000016da <MSPI_voidIntialize>:
#include "SPI_private.h"
#include "SPI_config.h"

/*=========================== Start_Function ===========================*/
void MSPI_voidIntialize(void)
{
    16da:	df 93       	push	r29
    16dc:	cf 93       	push	r28
    16de:	cd b7       	in	r28, 0x3d	; 61
    16e0:	de b7       	in	r29, 0x3e	; 62
	/* Master/Slave Select */
	#if SPI_MODE == MASTER

		MDIO_voidSetPinMode(GPIOB, MOSI_PIN, OUTPUT); 	/* MOSI Enable as output 	*/
    16e2:	81 e0       	ldi	r24, 0x01	; 1
    16e4:	65 e0       	ldi	r22, 0x05	; 5
    16e6:	40 e0       	ldi	r20, 0x00	; 0
    16e8:	0e 94 9b 05 	call	0xb36	; 0xb36 <MDIO_voidSetPinMode>
		MDIO_voidSetPinMode(GPIOB, SS_PIN, OUTPUT); 	/* SS Enable as output 		*/
    16ec:	81 e0       	ldi	r24, 0x01	; 1
    16ee:	64 e0       	ldi	r22, 0x04	; 4
    16f0:	40 e0       	ldi	r20, 0x00	; 0
    16f2:	0e 94 9b 05 	call	0xb36	; 0xb36 <MDIO_voidSetPinMode>
		MDIO_voidSetPinMode(GPIOB, SCK_PIN, OUTPUT); 	/* SCK Enable as output 	*/
    16f6:	81 e0       	ldi	r24, 0x01	; 1
    16f8:	67 e0       	ldi	r22, 0x07	; 7
    16fa:	40 e0       	ldi	r20, 0x00	; 0
    16fc:	0e 94 9b 05 	call	0xb36	; 0xb36 <MDIO_voidSetPinMode>

		SET_BIT(SPI->SPCR, 4); 							/* Master 					*/
    1700:	ad e2       	ldi	r26, 0x2D	; 45
    1702:	b0 e0       	ldi	r27, 0x00	; 0
    1704:	ed e2       	ldi	r30, 0x2D	; 45
    1706:	f0 e0       	ldi	r31, 0x00	; 0
    1708:	80 81       	ld	r24, Z
    170a:	80 61       	ori	r24, 0x10	; 16
    170c:	8c 93       	st	X, r24

		/*  Clock Phase */
		CLR_BIT(SPI->SPCR, 2); 							/* Sample on leading edge 	*/
    170e:	ad e2       	ldi	r26, 0x2D	; 45
    1710:	b0 e0       	ldi	r27, 0x00	; 0
    1712:	ed e2       	ldi	r30, 0x2D	; 45
    1714:	f0 e0       	ldi	r31, 0x00	; 0
    1716:	80 81       	ld	r24, Z
    1718:	8b 7f       	andi	r24, 0xFB	; 251
    171a:	8c 93       	st	X, r24

		/* Clock Polarity */
		CLR_BIT(SPI->SPCR, 3); 							/* SCK is low when idle 	*/
    171c:	ad e2       	ldi	r26, 0x2D	; 45
    171e:	b0 e0       	ldi	r27, 0x00	; 0
    1720:	ed e2       	ldi	r30, 0x2D	; 45
    1722:	f0 e0       	ldi	r31, 0x00	; 0
    1724:	80 81       	ld	r24, Z
    1726:	87 7f       	andi	r24, 0xF7	; 247
    1728:	8c 93       	st	X, r24

		/* Data Order */
		CLR_BIT(SPI->SPCR, 5); 							/* MSB first 				*/
    172a:	ad e2       	ldi	r26, 0x2D	; 45
    172c:	b0 e0       	ldi	r27, 0x00	; 0
    172e:	ed e2       	ldi	r30, 0x2D	; 45
    1730:	f0 e0       	ldi	r31, 0x00	; 0
    1732:	80 81       	ld	r24, Z
    1734:	8f 7d       	andi	r24, 0xDF	; 223
    1736:	8c 93       	st	X, r24

		/* SPI Interrupt Enable */
		#if SPI_INT == ENABLE
			SET_BIT(SPI->SPCR, 7); 						/* SPI interrupt enable 	*/
		#elif SPI_INT == DISABLE
			CLR_BIT(SPI->SPCR, 7); 						/* SPI interrupt disable 	*/
    1738:	ad e2       	ldi	r26, 0x2D	; 45
    173a:	b0 e0       	ldi	r27, 0x00	; 0
    173c:	ed e2       	ldi	r30, 0x2D	; 45
    173e:	f0 e0       	ldi	r31, 0x00	; 0
    1740:	80 81       	ld	r24, Z
    1742:	8f 77       	andi	r24, 0x7F	; 127
    1744:	8c 93       	st	X, r24
		#endif

		/* Clear flag */
		CLR_BIT(SPI->SPSR, 7);
    1746:	ad e2       	ldi	r26, 0x2D	; 45
    1748:	b0 e0       	ldi	r27, 0x00	; 0
    174a:	ed e2       	ldi	r30, 0x2D	; 45
    174c:	f0 e0       	ldi	r31, 0x00	; 0
    174e:	81 81       	ldd	r24, Z+1	; 0x01
    1750:	8f 77       	andi	r24, 0x7F	; 127
    1752:	11 96       	adiw	r26, 0x01	; 1
    1754:	8c 93       	st	X, r24
		/* SPI Enable */
		SET_BIT(SPI->SPCR, 6); 							/* SPI enable 				*/
    1756:	ad e2       	ldi	r26, 0x2D	; 45
    1758:	b0 e0       	ldi	r27, 0x00	; 0
    175a:	ed e2       	ldi	r30, 0x2D	; 45
    175c:	f0 e0       	ldi	r31, 0x00	; 0
    175e:	80 81       	ld	r24, Z
    1760:	80 64       	ori	r24, 0x40	; 64
    1762:	8c 93       	st	X, r24

		/* Data Order */
		CLR_BIT(SPI->SPCR, 5); 							/* MSB first 				*/

	#endif
}
    1764:	cf 91       	pop	r28
    1766:	df 91       	pop	r29
    1768:	08 95       	ret

0000176a <MSPI_voidSendData>:
/*============================ End_Function ============================*/
/*=========================== Start_Function ===========================*/
void MSPI_voidSendData(u8 copy_u8Data)
{
    176a:	df 93       	push	r29
    176c:	cf 93       	push	r28
    176e:	0f 92       	push	r0
    1770:	cd b7       	in	r28, 0x3d	; 61
    1772:	de b7       	in	r29, 0x3e	; 62
    1774:	89 83       	std	Y+1, r24	; 0x01

	SPI->SPDR = copy_u8Data;
    1776:	ed e2       	ldi	r30, 0x2D	; 45
    1778:	f0 e0       	ldi	r31, 0x00	; 0
    177a:	89 81       	ldd	r24, Y+1	; 0x01
    177c:	82 83       	std	Z+2, r24	; 0x02
	while(GET_BIT(SPI->SPSR, 7) == 0);
    177e:	ed e2       	ldi	r30, 0x2D	; 45
    1780:	f0 e0       	ldi	r31, 0x00	; 0
    1782:	81 81       	ldd	r24, Z+1	; 0x01
    1784:	88 23       	and	r24, r24
    1786:	dc f7       	brge	.-10     	; 0x177e <MSPI_voidSendData+0x14>
}
    1788:	0f 90       	pop	r0
    178a:	cf 91       	pop	r28
    178c:	df 91       	pop	r29
    178e:	08 95       	ret

00001790 <MSPI_voidRecieveData>:
/*============================ End_Function ============================*/
/*=========================== Start_Function ===========================*/
u8 MSPI_voidRecieveData(void)
{
    1790:	df 93       	push	r29
    1792:	cf 93       	push	r28
    1794:	cd b7       	in	r28, 0x3d	; 61
    1796:	de b7       	in	r29, 0x3e	; 62
	while(GET_BIT(SPI->SPSR, 7) == 0);
    1798:	ed e2       	ldi	r30, 0x2D	; 45
    179a:	f0 e0       	ldi	r31, 0x00	; 0
    179c:	81 81       	ldd	r24, Z+1	; 0x01
    179e:	88 23       	and	r24, r24
    17a0:	dc f7       	brge	.-10     	; 0x1798 <MSPI_voidRecieveData+0x8>
 	return SPI->SPDR;
    17a2:	ed e2       	ldi	r30, 0x2D	; 45
    17a4:	f0 e0       	ldi	r31, 0x00	; 0
    17a6:	82 81       	ldd	r24, Z+2	; 0x02
}
    17a8:	cf 91       	pop	r28
    17aa:	df 91       	pop	r29
    17ac:	08 95       	ret

000017ae <HSSD_voidSSDInit>:
#include "DIO_private.h"
#include "SSD_interface.h"
#include "SSD_config.h"

void HSSD_voidSSDInit(void)
{
    17ae:	df 93       	push	r29
    17b0:	cf 93       	push	r28
    17b2:	cd b7       	in	r28, 0x3d	; 61
    17b4:	de b7       	in	r29, 0x3e	; 62
	MDIO_voidSetPortMode(SSD_PORT, OUTPUT);
    17b6:	82 e0       	ldi	r24, 0x02	; 2
    17b8:	60 e0       	ldi	r22, 0x00	; 0
    17ba:	0e 94 ac 06 	call	0xd58	; 0xd58 <MDIO_voidSetPortMode>
}
    17be:	cf 91       	pop	r28
    17c0:	df 91       	pop	r29
    17c2:	08 95       	ret

000017c4 <HSSD_voidOneSevenSegment>:
void HSSD_voidOneSevenSegment(u8 copy_u8Num)
{
    17c4:	df 93       	push	r29
    17c6:	cf 93       	push	r28
    17c8:	00 d0       	rcall	.+0      	; 0x17ca <HSSD_voidOneSevenSegment+0x6>
    17ca:	0f 92       	push	r0
    17cc:	cd b7       	in	r28, 0x3d	; 61
    17ce:	de b7       	in	r29, 0x3e	; 62
    17d0:	89 83       	std	Y+1, r24	; 0x01
	switch(copy_u8Num)
    17d2:	89 81       	ldd	r24, Y+1	; 0x01
    17d4:	28 2f       	mov	r18, r24
    17d6:	30 e0       	ldi	r19, 0x00	; 0
    17d8:	3b 83       	std	Y+3, r19	; 0x03
    17da:	2a 83       	std	Y+2, r18	; 0x02
    17dc:	8a 81       	ldd	r24, Y+2	; 0x02
    17de:	9b 81       	ldd	r25, Y+3	; 0x03
    17e0:	86 36       	cpi	r24, 0x66	; 102
    17e2:	91 05       	cpc	r25, r1
    17e4:	09 f4       	brne	.+2      	; 0x17e8 <HSSD_voidOneSevenSegment+0x24>
    17e6:	df c0       	rjmp	.+446    	; 0x19a6 <HSSD_voidOneSevenSegment+0x1e2>
    17e8:	2a 81       	ldd	r18, Y+2	; 0x02
    17ea:	3b 81       	ldd	r19, Y+3	; 0x03
    17ec:	27 36       	cpi	r18, 0x67	; 103
    17ee:	31 05       	cpc	r19, r1
    17f0:	2c f5       	brge	.+74     	; 0x183c <HSSD_voidOneSevenSegment+0x78>
    17f2:	8a 81       	ldd	r24, Y+2	; 0x02
    17f4:	9b 81       	ldd	r25, Y+3	; 0x03
    17f6:	8f 33       	cpi	r24, 0x3F	; 63
    17f8:	91 05       	cpc	r25, r1
    17fa:	09 f4       	brne	.+2      	; 0x17fe <HSSD_voidOneSevenSegment+0x3a>
    17fc:	44 c0       	rjmp	.+136    	; 0x1886 <HSSD_voidOneSevenSegment+0xc2>
    17fe:	2a 81       	ldd	r18, Y+2	; 0x02
    1800:	3b 81       	ldd	r19, Y+3	; 0x03
    1802:	20 34       	cpi	r18, 0x40	; 64
    1804:	31 05       	cpc	r19, r1
    1806:	6c f4       	brge	.+26     	; 0x1822 <HSSD_voidOneSevenSegment+0x5e>
    1808:	8a 81       	ldd	r24, Y+2	; 0x02
    180a:	9b 81       	ldd	r25, Y+3	; 0x03
    180c:	86 30       	cpi	r24, 0x06	; 6
    180e:	91 05       	cpc	r25, r1
    1810:	09 f4       	brne	.+2      	; 0x1814 <HSSD_voidOneSevenSegment+0x50>
    1812:	5d c0       	rjmp	.+186    	; 0x18ce <HSSD_voidOneSevenSegment+0x10a>
    1814:	2a 81       	ldd	r18, Y+2	; 0x02
    1816:	3b 81       	ldd	r19, Y+3	; 0x03
    1818:	27 30       	cpi	r18, 0x07	; 7
    181a:	31 05       	cpc	r19, r1
    181c:	09 f4       	brne	.+2      	; 0x1820 <HSSD_voidOneSevenSegment+0x5c>
    181e:	2f c1       	rjmp	.+606    	; 0x1a7e <HSSD_voidOneSevenSegment+0x2ba>
    1820:	bd c1       	rjmp	.+890    	; 0x1b9c <HSSD_voidOneSevenSegment+0x3d8>
    1822:	8a 81       	ldd	r24, Y+2	; 0x02
    1824:	9b 81       	ldd	r25, Y+3	; 0x03
    1826:	8f 34       	cpi	r24, 0x4F	; 79
    1828:	91 05       	cpc	r25, r1
    182a:	09 f4       	brne	.+2      	; 0x182e <HSSD_voidOneSevenSegment+0x6a>
    182c:	98 c0       	rjmp	.+304    	; 0x195e <HSSD_voidOneSevenSegment+0x19a>
    182e:	2a 81       	ldd	r18, Y+2	; 0x02
    1830:	3b 81       	ldd	r19, Y+3	; 0x03
    1832:	2b 35       	cpi	r18, 0x5B	; 91
    1834:	31 05       	cpc	r19, r1
    1836:	09 f4       	brne	.+2      	; 0x183a <HSSD_voidOneSevenSegment+0x76>
    1838:	6e c0       	rjmp	.+220    	; 0x1916 <HSSD_voidOneSevenSegment+0x152>
    183a:	b0 c1       	rjmp	.+864    	; 0x1b9c <HSSD_voidOneSevenSegment+0x3d8>
    183c:	8a 81       	ldd	r24, Y+2	; 0x02
    183e:	9b 81       	ldd	r25, Y+3	; 0x03
    1840:	8d 37       	cpi	r24, 0x7D	; 125
    1842:	91 05       	cpc	r25, r1
    1844:	09 f4       	brne	.+2      	; 0x1848 <HSSD_voidOneSevenSegment+0x84>
    1846:	f7 c0       	rjmp	.+494    	; 0x1a36 <HSSD_voidOneSevenSegment+0x272>
    1848:	2a 81       	ldd	r18, Y+2	; 0x02
    184a:	3b 81       	ldd	r19, Y+3	; 0x03
    184c:	2e 37       	cpi	r18, 0x7E	; 126
    184e:	31 05       	cpc	r19, r1
    1850:	6c f4       	brge	.+26     	; 0x186c <HSSD_voidOneSevenSegment+0xa8>
    1852:	8a 81       	ldd	r24, Y+2	; 0x02
    1854:	9b 81       	ldd	r25, Y+3	; 0x03
    1856:	87 36       	cpi	r24, 0x67	; 103
    1858:	91 05       	cpc	r25, r1
    185a:	09 f4       	brne	.+2      	; 0x185e <HSSD_voidOneSevenSegment+0x9a>
    185c:	58 c1       	rjmp	.+688    	; 0x1b0e <HSSD_voidOneSevenSegment+0x34a>
    185e:	2a 81       	ldd	r18, Y+2	; 0x02
    1860:	3b 81       	ldd	r19, Y+3	; 0x03
    1862:	2d 36       	cpi	r18, 0x6D	; 109
    1864:	31 05       	cpc	r19, r1
    1866:	09 f4       	brne	.+2      	; 0x186a <HSSD_voidOneSevenSegment+0xa6>
    1868:	c2 c0       	rjmp	.+388    	; 0x19ee <HSSD_voidOneSevenSegment+0x22a>
    186a:	98 c1       	rjmp	.+816    	; 0x1b9c <HSSD_voidOneSevenSegment+0x3d8>
    186c:	8a 81       	ldd	r24, Y+2	; 0x02
    186e:	9b 81       	ldd	r25, Y+3	; 0x03
    1870:	8f 37       	cpi	r24, 0x7F	; 127
    1872:	91 05       	cpc	r25, r1
    1874:	09 f4       	brne	.+2      	; 0x1878 <HSSD_voidOneSevenSegment+0xb4>
    1876:	27 c1       	rjmp	.+590    	; 0x1ac6 <HSSD_voidOneSevenSegment+0x302>
    1878:	2a 81       	ldd	r18, Y+2	; 0x02
    187a:	3b 81       	ldd	r19, Y+3	; 0x03
    187c:	2f 3f       	cpi	r18, 0xFF	; 255
    187e:	31 05       	cpc	r19, r1
    1880:	09 f4       	brne	.+2      	; 0x1884 <HSSD_voidOneSevenSegment+0xc0>
    1882:	69 c1       	rjmp	.+722    	; 0x1b56 <HSSD_voidOneSevenSegment+0x392>
    1884:	8b c1       	rjmp	.+790    	; 0x1b9c <HSSD_voidOneSevenSegment+0x3d8>
	{
		case 0x3F: /* 0 */
			MDIO_voidSetPinValue(SSD_PORT, LED_A, HIGH);
    1886:	82 e0       	ldi	r24, 0x02	; 2
    1888:	60 e0       	ldi	r22, 0x00	; 0
    188a:	40 e0       	ldi	r20, 0x00	; 0
    188c:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_B, HIGH);
    1890:	82 e0       	ldi	r24, 0x02	; 2
    1892:	61 e0       	ldi	r22, 0x01	; 1
    1894:	40 e0       	ldi	r20, 0x00	; 0
    1896:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_C, HIGH);
    189a:	82 e0       	ldi	r24, 0x02	; 2
    189c:	62 e0       	ldi	r22, 0x02	; 2
    189e:	40 e0       	ldi	r20, 0x00	; 0
    18a0:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_D, HIGH);
    18a4:	82 e0       	ldi	r24, 0x02	; 2
    18a6:	63 e0       	ldi	r22, 0x03	; 3
    18a8:	40 e0       	ldi	r20, 0x00	; 0
    18aa:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_E, HIGH);
    18ae:	82 e0       	ldi	r24, 0x02	; 2
    18b0:	64 e0       	ldi	r22, 0x04	; 4
    18b2:	40 e0       	ldi	r20, 0x00	; 0
    18b4:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_F, HIGH);
    18b8:	82 e0       	ldi	r24, 0x02	; 2
    18ba:	65 e0       	ldi	r22, 0x05	; 5
    18bc:	40 e0       	ldi	r20, 0x00	; 0
    18be:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_G, LOW);
    18c2:	82 e0       	ldi	r24, 0x02	; 2
    18c4:	66 e0       	ldi	r22, 0x06	; 6
    18c6:	41 e0       	ldi	r20, 0x01	; 1
    18c8:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
    18cc:	67 c1       	rjmp	.+718    	; 0x1b9c <HSSD_voidOneSevenSegment+0x3d8>
			break;
		case 0x06: /* 1 */
			MDIO_voidSetPinValue(SSD_PORT, LED_A, LOW);
    18ce:	82 e0       	ldi	r24, 0x02	; 2
    18d0:	60 e0       	ldi	r22, 0x00	; 0
    18d2:	41 e0       	ldi	r20, 0x01	; 1
    18d4:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_B, LOW);
    18d8:	82 e0       	ldi	r24, 0x02	; 2
    18da:	61 e0       	ldi	r22, 0x01	; 1
    18dc:	41 e0       	ldi	r20, 0x01	; 1
    18de:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_C, LOW);
    18e2:	82 e0       	ldi	r24, 0x02	; 2
    18e4:	62 e0       	ldi	r22, 0x02	; 2
    18e6:	41 e0       	ldi	r20, 0x01	; 1
    18e8:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_D, LOW);
    18ec:	82 e0       	ldi	r24, 0x02	; 2
    18ee:	63 e0       	ldi	r22, 0x03	; 3
    18f0:	41 e0       	ldi	r20, 0x01	; 1
    18f2:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_E, HIGH);
    18f6:	82 e0       	ldi	r24, 0x02	; 2
    18f8:	64 e0       	ldi	r22, 0x04	; 4
    18fa:	40 e0       	ldi	r20, 0x00	; 0
    18fc:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_F, HIGH);
    1900:	82 e0       	ldi	r24, 0x02	; 2
    1902:	65 e0       	ldi	r22, 0x05	; 5
    1904:	40 e0       	ldi	r20, 0x00	; 0
    1906:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_G, LOW);
    190a:	82 e0       	ldi	r24, 0x02	; 2
    190c:	66 e0       	ldi	r22, 0x06	; 6
    190e:	41 e0       	ldi	r20, 0x01	; 1
    1910:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
    1914:	43 c1       	rjmp	.+646    	; 0x1b9c <HSSD_voidOneSevenSegment+0x3d8>
			break;
		case 0x5B: /* 2 */
			MDIO_voidSetPinValue(SSD_PORT, LED_A, HIGH);
    1916:	82 e0       	ldi	r24, 0x02	; 2
    1918:	60 e0       	ldi	r22, 0x00	; 0
    191a:	40 e0       	ldi	r20, 0x00	; 0
    191c:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_B, HIGH);
    1920:	82 e0       	ldi	r24, 0x02	; 2
    1922:	61 e0       	ldi	r22, 0x01	; 1
    1924:	40 e0       	ldi	r20, 0x00	; 0
    1926:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_C, LOW);
    192a:	82 e0       	ldi	r24, 0x02	; 2
    192c:	62 e0       	ldi	r22, 0x02	; 2
    192e:	41 e0       	ldi	r20, 0x01	; 1
    1930:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_D, HIGH);
    1934:	82 e0       	ldi	r24, 0x02	; 2
    1936:	63 e0       	ldi	r22, 0x03	; 3
    1938:	40 e0       	ldi	r20, 0x00	; 0
    193a:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_E, HIGH);
    193e:	82 e0       	ldi	r24, 0x02	; 2
    1940:	64 e0       	ldi	r22, 0x04	; 4
    1942:	40 e0       	ldi	r20, 0x00	; 0
    1944:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_F, LOW);
    1948:	82 e0       	ldi	r24, 0x02	; 2
    194a:	65 e0       	ldi	r22, 0x05	; 5
    194c:	41 e0       	ldi	r20, 0x01	; 1
    194e:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_G, HIGH);
    1952:	82 e0       	ldi	r24, 0x02	; 2
    1954:	66 e0       	ldi	r22, 0x06	; 6
    1956:	40 e0       	ldi	r20, 0x00	; 0
    1958:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
    195c:	1f c1       	rjmp	.+574    	; 0x1b9c <HSSD_voidOneSevenSegment+0x3d8>
			break;
		case 0x4F: /* 3 */
			MDIO_voidSetPinValue(SSD_PORT, LED_A, HIGH);
    195e:	82 e0       	ldi	r24, 0x02	; 2
    1960:	60 e0       	ldi	r22, 0x00	; 0
    1962:	40 e0       	ldi	r20, 0x00	; 0
    1964:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_B, HIGH);
    1968:	82 e0       	ldi	r24, 0x02	; 2
    196a:	61 e0       	ldi	r22, 0x01	; 1
    196c:	40 e0       	ldi	r20, 0x00	; 0
    196e:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_C, HIGH);
    1972:	82 e0       	ldi	r24, 0x02	; 2
    1974:	62 e0       	ldi	r22, 0x02	; 2
    1976:	40 e0       	ldi	r20, 0x00	; 0
    1978:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_D, HIGH);
    197c:	82 e0       	ldi	r24, 0x02	; 2
    197e:	63 e0       	ldi	r22, 0x03	; 3
    1980:	40 e0       	ldi	r20, 0x00	; 0
    1982:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_E, LOW);
    1986:	82 e0       	ldi	r24, 0x02	; 2
    1988:	64 e0       	ldi	r22, 0x04	; 4
    198a:	41 e0       	ldi	r20, 0x01	; 1
    198c:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_F, LOW);
    1990:	82 e0       	ldi	r24, 0x02	; 2
    1992:	65 e0       	ldi	r22, 0x05	; 5
    1994:	41 e0       	ldi	r20, 0x01	; 1
    1996:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_G, HIGH);
    199a:	82 e0       	ldi	r24, 0x02	; 2
    199c:	66 e0       	ldi	r22, 0x06	; 6
    199e:	40 e0       	ldi	r20, 0x00	; 0
    19a0:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
    19a4:	fb c0       	rjmp	.+502    	; 0x1b9c <HSSD_voidOneSevenSegment+0x3d8>
			break;
		case 0x66: /* 4 */
			MDIO_voidSetPinValue(SSD_PORT, LED_A, LOW);
    19a6:	82 e0       	ldi	r24, 0x02	; 2
    19a8:	60 e0       	ldi	r22, 0x00	; 0
    19aa:	41 e0       	ldi	r20, 0x01	; 1
    19ac:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_B, HIGH);
    19b0:	82 e0       	ldi	r24, 0x02	; 2
    19b2:	61 e0       	ldi	r22, 0x01	; 1
    19b4:	40 e0       	ldi	r20, 0x00	; 0
    19b6:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_C, HIGH);
    19ba:	82 e0       	ldi	r24, 0x02	; 2
    19bc:	62 e0       	ldi	r22, 0x02	; 2
    19be:	40 e0       	ldi	r20, 0x00	; 0
    19c0:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_D, LOW);
    19c4:	82 e0       	ldi	r24, 0x02	; 2
    19c6:	63 e0       	ldi	r22, 0x03	; 3
    19c8:	41 e0       	ldi	r20, 0x01	; 1
    19ca:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_E, LOW);
    19ce:	82 e0       	ldi	r24, 0x02	; 2
    19d0:	64 e0       	ldi	r22, 0x04	; 4
    19d2:	41 e0       	ldi	r20, 0x01	; 1
    19d4:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_F, HIGH);
    19d8:	82 e0       	ldi	r24, 0x02	; 2
    19da:	65 e0       	ldi	r22, 0x05	; 5
    19dc:	40 e0       	ldi	r20, 0x00	; 0
    19de:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_G, HIGH);
    19e2:	82 e0       	ldi	r24, 0x02	; 2
    19e4:	66 e0       	ldi	r22, 0x06	; 6
    19e6:	40 e0       	ldi	r20, 0x00	; 0
    19e8:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
    19ec:	d7 c0       	rjmp	.+430    	; 0x1b9c <HSSD_voidOneSevenSegment+0x3d8>
			break;
		case 0x6D: /* 5 */
			MDIO_voidSetPinValue(SSD_PORT, LED_A, HIGH);
    19ee:	82 e0       	ldi	r24, 0x02	; 2
    19f0:	60 e0       	ldi	r22, 0x00	; 0
    19f2:	40 e0       	ldi	r20, 0x00	; 0
    19f4:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_B, LOW);
    19f8:	82 e0       	ldi	r24, 0x02	; 2
    19fa:	61 e0       	ldi	r22, 0x01	; 1
    19fc:	41 e0       	ldi	r20, 0x01	; 1
    19fe:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_C, HIGH);
    1a02:	82 e0       	ldi	r24, 0x02	; 2
    1a04:	62 e0       	ldi	r22, 0x02	; 2
    1a06:	40 e0       	ldi	r20, 0x00	; 0
    1a08:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_D, HIGH);
    1a0c:	82 e0       	ldi	r24, 0x02	; 2
    1a0e:	63 e0       	ldi	r22, 0x03	; 3
    1a10:	40 e0       	ldi	r20, 0x00	; 0
    1a12:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_E, LOW);
    1a16:	82 e0       	ldi	r24, 0x02	; 2
    1a18:	64 e0       	ldi	r22, 0x04	; 4
    1a1a:	41 e0       	ldi	r20, 0x01	; 1
    1a1c:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_F, HIGH);
    1a20:	82 e0       	ldi	r24, 0x02	; 2
    1a22:	65 e0       	ldi	r22, 0x05	; 5
    1a24:	40 e0       	ldi	r20, 0x00	; 0
    1a26:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_G, HIGH);
    1a2a:	82 e0       	ldi	r24, 0x02	; 2
    1a2c:	66 e0       	ldi	r22, 0x06	; 6
    1a2e:	40 e0       	ldi	r20, 0x00	; 0
    1a30:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
    1a34:	b3 c0       	rjmp	.+358    	; 0x1b9c <HSSD_voidOneSevenSegment+0x3d8>
			break;
		case 0x7D: /* 6 */
			MDIO_voidSetPinValue(SSD_PORT, LED_A, HIGH);
    1a36:	82 e0       	ldi	r24, 0x02	; 2
    1a38:	60 e0       	ldi	r22, 0x00	; 0
    1a3a:	40 e0       	ldi	r20, 0x00	; 0
    1a3c:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_B, LOW);
    1a40:	82 e0       	ldi	r24, 0x02	; 2
    1a42:	61 e0       	ldi	r22, 0x01	; 1
    1a44:	41 e0       	ldi	r20, 0x01	; 1
    1a46:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_C, HIGH);
    1a4a:	82 e0       	ldi	r24, 0x02	; 2
    1a4c:	62 e0       	ldi	r22, 0x02	; 2
    1a4e:	40 e0       	ldi	r20, 0x00	; 0
    1a50:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_D, HIGH);
    1a54:	82 e0       	ldi	r24, 0x02	; 2
    1a56:	63 e0       	ldi	r22, 0x03	; 3
    1a58:	40 e0       	ldi	r20, 0x00	; 0
    1a5a:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_E, HIGH);
    1a5e:	82 e0       	ldi	r24, 0x02	; 2
    1a60:	64 e0       	ldi	r22, 0x04	; 4
    1a62:	40 e0       	ldi	r20, 0x00	; 0
    1a64:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_F, HIGH);
    1a68:	82 e0       	ldi	r24, 0x02	; 2
    1a6a:	65 e0       	ldi	r22, 0x05	; 5
    1a6c:	40 e0       	ldi	r20, 0x00	; 0
    1a6e:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_G, HIGH);
    1a72:	82 e0       	ldi	r24, 0x02	; 2
    1a74:	66 e0       	ldi	r22, 0x06	; 6
    1a76:	40 e0       	ldi	r20, 0x00	; 0
    1a78:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
    1a7c:	8f c0       	rjmp	.+286    	; 0x1b9c <HSSD_voidOneSevenSegment+0x3d8>
			break;
		case 0x07: /* 7 */
			MDIO_voidSetPinValue(SSD_PORT, LED_A, HIGH);
    1a7e:	82 e0       	ldi	r24, 0x02	; 2
    1a80:	60 e0       	ldi	r22, 0x00	; 0
    1a82:	40 e0       	ldi	r20, 0x00	; 0
    1a84:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_B, HIGH);
    1a88:	82 e0       	ldi	r24, 0x02	; 2
    1a8a:	61 e0       	ldi	r22, 0x01	; 1
    1a8c:	40 e0       	ldi	r20, 0x00	; 0
    1a8e:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_C, HIGH);
    1a92:	82 e0       	ldi	r24, 0x02	; 2
    1a94:	62 e0       	ldi	r22, 0x02	; 2
    1a96:	40 e0       	ldi	r20, 0x00	; 0
    1a98:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_D, LOW);
    1a9c:	82 e0       	ldi	r24, 0x02	; 2
    1a9e:	63 e0       	ldi	r22, 0x03	; 3
    1aa0:	41 e0       	ldi	r20, 0x01	; 1
    1aa2:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_E, LOW);
    1aa6:	82 e0       	ldi	r24, 0x02	; 2
    1aa8:	64 e0       	ldi	r22, 0x04	; 4
    1aaa:	41 e0       	ldi	r20, 0x01	; 1
    1aac:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_F, LOW);
    1ab0:	82 e0       	ldi	r24, 0x02	; 2
    1ab2:	65 e0       	ldi	r22, 0x05	; 5
    1ab4:	41 e0       	ldi	r20, 0x01	; 1
    1ab6:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_G, LOW);
    1aba:	82 e0       	ldi	r24, 0x02	; 2
    1abc:	66 e0       	ldi	r22, 0x06	; 6
    1abe:	41 e0       	ldi	r20, 0x01	; 1
    1ac0:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
    1ac4:	6b c0       	rjmp	.+214    	; 0x1b9c <HSSD_voidOneSevenSegment+0x3d8>
			break;
		case 0x7F: /* 8 */
			MDIO_voidSetPinValue(SSD_PORT, LED_A, HIGH);
    1ac6:	82 e0       	ldi	r24, 0x02	; 2
    1ac8:	60 e0       	ldi	r22, 0x00	; 0
    1aca:	40 e0       	ldi	r20, 0x00	; 0
    1acc:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_B, HIGH);
    1ad0:	82 e0       	ldi	r24, 0x02	; 2
    1ad2:	61 e0       	ldi	r22, 0x01	; 1
    1ad4:	40 e0       	ldi	r20, 0x00	; 0
    1ad6:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_C, HIGH);
    1ada:	82 e0       	ldi	r24, 0x02	; 2
    1adc:	62 e0       	ldi	r22, 0x02	; 2
    1ade:	40 e0       	ldi	r20, 0x00	; 0
    1ae0:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_D, HIGH);
    1ae4:	82 e0       	ldi	r24, 0x02	; 2
    1ae6:	63 e0       	ldi	r22, 0x03	; 3
    1ae8:	40 e0       	ldi	r20, 0x00	; 0
    1aea:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_E, HIGH);
    1aee:	82 e0       	ldi	r24, 0x02	; 2
    1af0:	64 e0       	ldi	r22, 0x04	; 4
    1af2:	40 e0       	ldi	r20, 0x00	; 0
    1af4:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_F, HIGH);
    1af8:	82 e0       	ldi	r24, 0x02	; 2
    1afa:	65 e0       	ldi	r22, 0x05	; 5
    1afc:	40 e0       	ldi	r20, 0x00	; 0
    1afe:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_G, HIGH);
    1b02:	82 e0       	ldi	r24, 0x02	; 2
    1b04:	66 e0       	ldi	r22, 0x06	; 6
    1b06:	40 e0       	ldi	r20, 0x00	; 0
    1b08:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
    1b0c:	47 c0       	rjmp	.+142    	; 0x1b9c <HSSD_voidOneSevenSegment+0x3d8>
			break;
		case 0x67: /* 9 */
			MDIO_voidSetPinValue(SSD_PORT, LED_A, HIGH);
    1b0e:	82 e0       	ldi	r24, 0x02	; 2
    1b10:	60 e0       	ldi	r22, 0x00	; 0
    1b12:	40 e0       	ldi	r20, 0x00	; 0
    1b14:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_B, HIGH);
    1b18:	82 e0       	ldi	r24, 0x02	; 2
    1b1a:	61 e0       	ldi	r22, 0x01	; 1
    1b1c:	40 e0       	ldi	r20, 0x00	; 0
    1b1e:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_C, HIGH);
    1b22:	82 e0       	ldi	r24, 0x02	; 2
    1b24:	62 e0       	ldi	r22, 0x02	; 2
    1b26:	40 e0       	ldi	r20, 0x00	; 0
    1b28:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_D, LOW);
    1b2c:	82 e0       	ldi	r24, 0x02	; 2
    1b2e:	63 e0       	ldi	r22, 0x03	; 3
    1b30:	41 e0       	ldi	r20, 0x01	; 1
    1b32:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_E, LOW);
    1b36:	82 e0       	ldi	r24, 0x02	; 2
    1b38:	64 e0       	ldi	r22, 0x04	; 4
    1b3a:	41 e0       	ldi	r20, 0x01	; 1
    1b3c:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_F, HIGH);
    1b40:	82 e0       	ldi	r24, 0x02	; 2
    1b42:	65 e0       	ldi	r22, 0x05	; 5
    1b44:	40 e0       	ldi	r20, 0x00	; 0
    1b46:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_G, HIGH);
    1b4a:	82 e0       	ldi	r24, 0x02	; 2
    1b4c:	66 e0       	ldi	r22, 0x06	; 6
    1b4e:	40 e0       	ldi	r20, 0x00	; 0
    1b50:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
    1b54:	23 c0       	rjmp	.+70     	; 0x1b9c <HSSD_voidOneSevenSegment+0x3d8>
			break;
		case 0xFF: /* E */ /* EMPTY */
			MDIO_voidSetPinValue(SSD_PORT, LED_A, HIGH);
    1b56:	82 e0       	ldi	r24, 0x02	; 2
    1b58:	60 e0       	ldi	r22, 0x00	; 0
    1b5a:	40 e0       	ldi	r20, 0x00	; 0
    1b5c:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_B, LOW);
    1b60:	82 e0       	ldi	r24, 0x02	; 2
    1b62:	61 e0       	ldi	r22, 0x01	; 1
    1b64:	41 e0       	ldi	r20, 0x01	; 1
    1b66:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_C, LOW);
    1b6a:	82 e0       	ldi	r24, 0x02	; 2
    1b6c:	62 e0       	ldi	r22, 0x02	; 2
    1b6e:	41 e0       	ldi	r20, 0x01	; 1
    1b70:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_D, HIGH);
    1b74:	82 e0       	ldi	r24, 0x02	; 2
    1b76:	63 e0       	ldi	r22, 0x03	; 3
    1b78:	40 e0       	ldi	r20, 0x00	; 0
    1b7a:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_E, HIGH);
    1b7e:	82 e0       	ldi	r24, 0x02	; 2
    1b80:	64 e0       	ldi	r22, 0x04	; 4
    1b82:	40 e0       	ldi	r20, 0x00	; 0
    1b84:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_F, HIGH);
    1b88:	82 e0       	ldi	r24, 0x02	; 2
    1b8a:	65 e0       	ldi	r22, 0x05	; 5
    1b8c:	40 e0       	ldi	r20, 0x00	; 0
    1b8e:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			MDIO_voidSetPinValue(SSD_PORT, LED_G, HIGH);
    1b92:	82 e0       	ldi	r24, 0x02	; 2
    1b94:	66 e0       	ldi	r22, 0x06	; 6
    1b96:	40 e0       	ldi	r20, 0x00	; 0
    1b98:	0e 94 25 07 	call	0xe4a	; 0xe4a <MDIO_voidSetPinValue>
			break;
	}
}
    1b9c:	0f 90       	pop	r0
    1b9e:	0f 90       	pop	r0
    1ba0:	0f 90       	pop	r0
    1ba2:	cf 91       	pop	r28
    1ba4:	df 91       	pop	r29
    1ba6:	08 95       	ret

00001ba8 <main>:
#include "SPI_interface.h"
#include "EEPROM_interface.h"
#include "SSD_interface.h"

int main()
{
    1ba8:	df 93       	push	r29
    1baa:	cf 93       	push	r28
    1bac:	cd b7       	in	r28, 0x3d	; 61
    1bae:	de b7       	in	r29, 0x3e	; 62
    1bb0:	ec 97       	sbiw	r28, 0x3c	; 60
    1bb2:	0f b6       	in	r0, 0x3f	; 63
    1bb4:	f8 94       	cli
    1bb6:	de bf       	out	0x3e, r29	; 62
    1bb8:	0f be       	out	0x3f, r0	; 63
    1bba:	cd bf       	out	0x3d, r28	; 61
	u8 Local_u8represent;
	/* Initialize SSD */
	HSSD_voidSSDInit();
    1bbc:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <HSSD_voidSSDInit>
	/* Initialize SPI */
	MSPI_voidIntialize();
    1bc0:	0e 94 6d 0b 	call	0x16da	; 0x16da <MSPI_voidIntialize>
    1bc4:	80 e0       	ldi	r24, 0x00	; 0
    1bc6:	90 e0       	ldi	r25, 0x00	; 0
    1bc8:	a0 ea       	ldi	r26, 0xA0	; 160
    1bca:	b0 e4       	ldi	r27, 0x40	; 64
    1bcc:	89 8f       	std	Y+25, r24	; 0x19
    1bce:	9a 8f       	std	Y+26, r25	; 0x1a
    1bd0:	ab 8f       	std	Y+27, r26	; 0x1b
    1bd2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bd4:	69 8d       	ldd	r22, Y+25	; 0x19
    1bd6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1bd8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1bda:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1bdc:	20 e0       	ldi	r18, 0x00	; 0
    1bde:	30 e0       	ldi	r19, 0x00	; 0
    1be0:	4a ef       	ldi	r20, 0xFA	; 250
    1be2:	54 e4       	ldi	r21, 0x44	; 68
    1be4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1be8:	dc 01       	movw	r26, r24
    1bea:	cb 01       	movw	r24, r22
    1bec:	8d 8b       	std	Y+21, r24	; 0x15
    1bee:	9e 8b       	std	Y+22, r25	; 0x16
    1bf0:	af 8b       	std	Y+23, r26	; 0x17
    1bf2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1bf4:	6d 89       	ldd	r22, Y+21	; 0x15
    1bf6:	7e 89       	ldd	r23, Y+22	; 0x16
    1bf8:	8f 89       	ldd	r24, Y+23	; 0x17
    1bfa:	98 8d       	ldd	r25, Y+24	; 0x18
    1bfc:	20 e0       	ldi	r18, 0x00	; 0
    1bfe:	30 e0       	ldi	r19, 0x00	; 0
    1c00:	40 e8       	ldi	r20, 0x80	; 128
    1c02:	5f e3       	ldi	r21, 0x3F	; 63
    1c04:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c08:	88 23       	and	r24, r24
    1c0a:	2c f4       	brge	.+10     	; 0x1c16 <main+0x6e>
		__ticks = 1;
    1c0c:	81 e0       	ldi	r24, 0x01	; 1
    1c0e:	90 e0       	ldi	r25, 0x00	; 0
    1c10:	9c 8b       	std	Y+20, r25	; 0x14
    1c12:	8b 8b       	std	Y+19, r24	; 0x13
    1c14:	3f c0       	rjmp	.+126    	; 0x1c94 <main+0xec>
	else if (__tmp > 65535)
    1c16:	6d 89       	ldd	r22, Y+21	; 0x15
    1c18:	7e 89       	ldd	r23, Y+22	; 0x16
    1c1a:	8f 89       	ldd	r24, Y+23	; 0x17
    1c1c:	98 8d       	ldd	r25, Y+24	; 0x18
    1c1e:	20 e0       	ldi	r18, 0x00	; 0
    1c20:	3f ef       	ldi	r19, 0xFF	; 255
    1c22:	4f e7       	ldi	r20, 0x7F	; 127
    1c24:	57 e4       	ldi	r21, 0x47	; 71
    1c26:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c2a:	18 16       	cp	r1, r24
    1c2c:	4c f5       	brge	.+82     	; 0x1c80 <main+0xd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c2e:	69 8d       	ldd	r22, Y+25	; 0x19
    1c30:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c32:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c34:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c36:	20 e0       	ldi	r18, 0x00	; 0
    1c38:	30 e0       	ldi	r19, 0x00	; 0
    1c3a:	40 e2       	ldi	r20, 0x20	; 32
    1c3c:	51 e4       	ldi	r21, 0x41	; 65
    1c3e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c42:	dc 01       	movw	r26, r24
    1c44:	cb 01       	movw	r24, r22
    1c46:	bc 01       	movw	r22, r24
    1c48:	cd 01       	movw	r24, r26
    1c4a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c4e:	dc 01       	movw	r26, r24
    1c50:	cb 01       	movw	r24, r22
    1c52:	9c 8b       	std	Y+20, r25	; 0x14
    1c54:	8b 8b       	std	Y+19, r24	; 0x13
    1c56:	0f c0       	rjmp	.+30     	; 0x1c76 <main+0xce>
    1c58:	88 ec       	ldi	r24, 0xC8	; 200
    1c5a:	90 e0       	ldi	r25, 0x00	; 0
    1c5c:	9a 8b       	std	Y+18, r25	; 0x12
    1c5e:	89 8b       	std	Y+17, r24	; 0x11
    1c60:	89 89       	ldd	r24, Y+17	; 0x11
    1c62:	9a 89       	ldd	r25, Y+18	; 0x12
    1c64:	01 97       	sbiw	r24, 0x01	; 1
    1c66:	f1 f7       	brne	.-4      	; 0x1c64 <main+0xbc>
    1c68:	9a 8b       	std	Y+18, r25	; 0x12
    1c6a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c6c:	8b 89       	ldd	r24, Y+19	; 0x13
    1c6e:	9c 89       	ldd	r25, Y+20	; 0x14
    1c70:	01 97       	sbiw	r24, 0x01	; 1
    1c72:	9c 8b       	std	Y+20, r25	; 0x14
    1c74:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c76:	8b 89       	ldd	r24, Y+19	; 0x13
    1c78:	9c 89       	ldd	r25, Y+20	; 0x14
    1c7a:	00 97       	sbiw	r24, 0x00	; 0
    1c7c:	69 f7       	brne	.-38     	; 0x1c58 <main+0xb0>
    1c7e:	14 c0       	rjmp	.+40     	; 0x1ca8 <main+0x100>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c80:	6d 89       	ldd	r22, Y+21	; 0x15
    1c82:	7e 89       	ldd	r23, Y+22	; 0x16
    1c84:	8f 89       	ldd	r24, Y+23	; 0x17
    1c86:	98 8d       	ldd	r25, Y+24	; 0x18
    1c88:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c8c:	dc 01       	movw	r26, r24
    1c8e:	cb 01       	movw	r24, r22
    1c90:	9c 8b       	std	Y+20, r25	; 0x14
    1c92:	8b 8b       	std	Y+19, r24	; 0x13
    1c94:	8b 89       	ldd	r24, Y+19	; 0x13
    1c96:	9c 89       	ldd	r25, Y+20	; 0x14
    1c98:	98 8b       	std	Y+16, r25	; 0x10
    1c9a:	8f 87       	std	Y+15, r24	; 0x0f
    1c9c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1c9e:	98 89       	ldd	r25, Y+16	; 0x10
    1ca0:	01 97       	sbiw	r24, 0x01	; 1
    1ca2:	f1 f7       	brne	.-4      	; 0x1ca0 <main+0xf8>
    1ca4:	98 8b       	std	Y+16, r25	; 0x10
    1ca6:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(5);
	/* Read first address */
	Local_u8represent = HEEPROM_u8ReadData(0x00);
    1ca8:	80 e0       	ldi	r24, 0x00	; 0
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	0e 94 40 0b 	call	0x1680	; 0x1680 <HEEPROM_u8ReadData>
    1cb0:	8e 8f       	std	Y+30, r24	; 0x1e

	/* EEPROM is empty when 0xFF is stored */
	if(Local_u8represent == 0xFF)
    1cb2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1cb4:	8f 3f       	cpi	r24, 0xFF	; 255
    1cb6:	49 f5       	brne	.+82     	; 0x1d0a <main+0x162>
		 * 0x6D : 5
		 * 0x7D : 6
		 * 0x07 : 7
		 * 0x7F : 8
		 * 0X67 : 9 */
		u8 arr1[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x67};
    1cb8:	ce 01       	movw	r24, r28
    1cba:	4f 96       	adiw	r24, 0x1f	; 31
    1cbc:	9c ab       	std	Y+52, r25	; 0x34
    1cbe:	8b ab       	std	Y+51, r24	; 0x33
    1cc0:	e2 e7       	ldi	r30, 0x72	; 114
    1cc2:	f0 e0       	ldi	r31, 0x00	; 0
    1cc4:	fe ab       	std	Y+54, r31	; 0x36
    1cc6:	ed ab       	std	Y+53, r30	; 0x35
    1cc8:	fa e0       	ldi	r31, 0x0A	; 10
    1cca:	ff ab       	std	Y+55, r31	; 0x37
    1ccc:	ed a9       	ldd	r30, Y+53	; 0x35
    1cce:	fe a9       	ldd	r31, Y+54	; 0x36
    1cd0:	00 80       	ld	r0, Z
    1cd2:	8d a9       	ldd	r24, Y+53	; 0x35
    1cd4:	9e a9       	ldd	r25, Y+54	; 0x36
    1cd6:	01 96       	adiw	r24, 0x01	; 1
    1cd8:	9e ab       	std	Y+54, r25	; 0x36
    1cda:	8d ab       	std	Y+53, r24	; 0x35
    1cdc:	eb a9       	ldd	r30, Y+51	; 0x33
    1cde:	fc a9       	ldd	r31, Y+52	; 0x34
    1ce0:	00 82       	st	Z, r0
    1ce2:	8b a9       	ldd	r24, Y+51	; 0x33
    1ce4:	9c a9       	ldd	r25, Y+52	; 0x34
    1ce6:	01 96       	adiw	r24, 0x01	; 1
    1ce8:	9c ab       	std	Y+52, r25	; 0x34
    1cea:	8b ab       	std	Y+51, r24	; 0x33
    1cec:	9f a9       	ldd	r25, Y+55	; 0x37
    1cee:	91 50       	subi	r25, 0x01	; 1
    1cf0:	9f ab       	std	Y+55, r25	; 0x37
    1cf2:	ef a9       	ldd	r30, Y+55	; 0x37
    1cf4:	ee 23       	and	r30, r30
    1cf6:	51 f7       	brne	.-44     	; 0x1ccc <main+0x124>
		HEEPROM_voidSend10Bytes(0x00, arr1);
    1cf8:	9e 01       	movw	r18, r28
    1cfa:	21 5e       	subi	r18, 0xE1	; 225
    1cfc:	3f 4f       	sbci	r19, 0xFF	; 255
    1cfe:	80 e0       	ldi	r24, 0x00	; 0
    1d00:	90 e0       	ldi	r25, 0x00	; 0
    1d02:	b9 01       	movw	r22, r18
    1d04:	0e 94 10 0a 	call	0x1420	; 0x1420 <HEEPROM_voidSend10Bytes>
    1d08:	28 c0       	rjmp	.+80     	; 0x1d5a <main+0x1b2>
	}
	else
	{
		u8 arr2[10] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
    1d0a:	ce 01       	movw	r24, r28
    1d0c:	89 96       	adiw	r24, 0x29	; 41
    1d0e:	99 af       	std	Y+57, r25	; 0x39
    1d10:	88 af       	std	Y+56, r24	; 0x38
    1d12:	e8 e6       	ldi	r30, 0x68	; 104
    1d14:	f0 e0       	ldi	r31, 0x00	; 0
    1d16:	fb af       	std	Y+59, r31	; 0x3b
    1d18:	ea af       	std	Y+58, r30	; 0x3a
    1d1a:	fa e0       	ldi	r31, 0x0A	; 10
    1d1c:	fc af       	std	Y+60, r31	; 0x3c
    1d1e:	ea ad       	ldd	r30, Y+58	; 0x3a
    1d20:	fb ad       	ldd	r31, Y+59	; 0x3b
    1d22:	00 80       	ld	r0, Z
    1d24:	8a ad       	ldd	r24, Y+58	; 0x3a
    1d26:	9b ad       	ldd	r25, Y+59	; 0x3b
    1d28:	01 96       	adiw	r24, 0x01	; 1
    1d2a:	9b af       	std	Y+59, r25	; 0x3b
    1d2c:	8a af       	std	Y+58, r24	; 0x3a
    1d2e:	e8 ad       	ldd	r30, Y+56	; 0x38
    1d30:	f9 ad       	ldd	r31, Y+57	; 0x39
    1d32:	00 82       	st	Z, r0
    1d34:	88 ad       	ldd	r24, Y+56	; 0x38
    1d36:	99 ad       	ldd	r25, Y+57	; 0x39
    1d38:	01 96       	adiw	r24, 0x01	; 1
    1d3a:	99 af       	std	Y+57, r25	; 0x39
    1d3c:	88 af       	std	Y+56, r24	; 0x38
    1d3e:	9c ad       	ldd	r25, Y+60	; 0x3c
    1d40:	91 50       	subi	r25, 0x01	; 1
    1d42:	9c af       	std	Y+60, r25	; 0x3c
    1d44:	ec ad       	ldd	r30, Y+60	; 0x3c
    1d46:	ee 23       	and	r30, r30
    1d48:	51 f7       	brne	.-44     	; 0x1d1e <main+0x176>
		HEEPROM_voidSend10Bytes(0x00, arr2);
    1d4a:	9e 01       	movw	r18, r28
    1d4c:	27 5d       	subi	r18, 0xD7	; 215
    1d4e:	3f 4f       	sbci	r19, 0xFF	; 255
    1d50:	80 e0       	ldi	r24, 0x00	; 0
    1d52:	90 e0       	ldi	r25, 0x00	; 0
    1d54:	b9 01       	movw	r22, r18
    1d56:	0e 94 10 0a 	call	0x1420	; 0x1420 <HEEPROM_voidSend10Bytes>
	}

	while(1)
	{
		for(u8 local_u8Counter  = 0; local_u8Counter <= 9; local_u8Counter++)
    1d5a:	1d 8e       	std	Y+29, r1	; 0x1d
    1d5c:	7e c0       	rjmp	.+252    	; 0x1e5a <main+0x2b2>
		{
			/* Read the address to get the data */
			Local_u8represent = HEEPROM_u8ReadData(0x00 + local_u8Counter);
    1d5e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1d60:	88 2f       	mov	r24, r24
    1d62:	90 e0       	ldi	r25, 0x00	; 0
    1d64:	0e 94 40 0b 	call	0x1680	; 0x1680 <HEEPROM_u8ReadData>
    1d68:	8e 8f       	std	Y+30, r24	; 0x1e
			/* Show the data on the SSD */
			HSSD_voidOneSevenSegment(Local_u8represent);
    1d6a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1d6c:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <HSSD_voidOneSevenSegment>
    1d70:	80 e0       	ldi	r24, 0x00	; 0
    1d72:	90 e0       	ldi	r25, 0x00	; 0
    1d74:	a8 ec       	ldi	r26, 0xC8	; 200
    1d76:	b2 e4       	ldi	r27, 0x42	; 66
    1d78:	8b 87       	std	Y+11, r24	; 0x0b
    1d7a:	9c 87       	std	Y+12, r25	; 0x0c
    1d7c:	ad 87       	std	Y+13, r26	; 0x0d
    1d7e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d80:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d82:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d84:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d86:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d88:	20 e0       	ldi	r18, 0x00	; 0
    1d8a:	30 e0       	ldi	r19, 0x00	; 0
    1d8c:	4a ef       	ldi	r20, 0xFA	; 250
    1d8e:	54 e4       	ldi	r21, 0x44	; 68
    1d90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d94:	dc 01       	movw	r26, r24
    1d96:	cb 01       	movw	r24, r22
    1d98:	8f 83       	std	Y+7, r24	; 0x07
    1d9a:	98 87       	std	Y+8, r25	; 0x08
    1d9c:	a9 87       	std	Y+9, r26	; 0x09
    1d9e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1da0:	6f 81       	ldd	r22, Y+7	; 0x07
    1da2:	78 85       	ldd	r23, Y+8	; 0x08
    1da4:	89 85       	ldd	r24, Y+9	; 0x09
    1da6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1da8:	20 e0       	ldi	r18, 0x00	; 0
    1daa:	30 e0       	ldi	r19, 0x00	; 0
    1dac:	40 e8       	ldi	r20, 0x80	; 128
    1dae:	5f e3       	ldi	r21, 0x3F	; 63
    1db0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1db4:	88 23       	and	r24, r24
    1db6:	2c f4       	brge	.+10     	; 0x1dc2 <main+0x21a>
		__ticks = 1;
    1db8:	81 e0       	ldi	r24, 0x01	; 1
    1dba:	90 e0       	ldi	r25, 0x00	; 0
    1dbc:	9e 83       	std	Y+6, r25	; 0x06
    1dbe:	8d 83       	std	Y+5, r24	; 0x05
    1dc0:	3f c0       	rjmp	.+126    	; 0x1e40 <main+0x298>
	else if (__tmp > 65535)
    1dc2:	6f 81       	ldd	r22, Y+7	; 0x07
    1dc4:	78 85       	ldd	r23, Y+8	; 0x08
    1dc6:	89 85       	ldd	r24, Y+9	; 0x09
    1dc8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dca:	20 e0       	ldi	r18, 0x00	; 0
    1dcc:	3f ef       	ldi	r19, 0xFF	; 255
    1dce:	4f e7       	ldi	r20, 0x7F	; 127
    1dd0:	57 e4       	ldi	r21, 0x47	; 71
    1dd2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1dd6:	18 16       	cp	r1, r24
    1dd8:	4c f5       	brge	.+82     	; 0x1e2c <main+0x284>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dda:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ddc:	7c 85       	ldd	r23, Y+12	; 0x0c
    1dde:	8d 85       	ldd	r24, Y+13	; 0x0d
    1de0:	9e 85       	ldd	r25, Y+14	; 0x0e
    1de2:	20 e0       	ldi	r18, 0x00	; 0
    1de4:	30 e0       	ldi	r19, 0x00	; 0
    1de6:	40 e2       	ldi	r20, 0x20	; 32
    1de8:	51 e4       	ldi	r21, 0x41	; 65
    1dea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dee:	dc 01       	movw	r26, r24
    1df0:	cb 01       	movw	r24, r22
    1df2:	bc 01       	movw	r22, r24
    1df4:	cd 01       	movw	r24, r26
    1df6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dfa:	dc 01       	movw	r26, r24
    1dfc:	cb 01       	movw	r24, r22
    1dfe:	9e 83       	std	Y+6, r25	; 0x06
    1e00:	8d 83       	std	Y+5, r24	; 0x05
    1e02:	0f c0       	rjmp	.+30     	; 0x1e22 <main+0x27a>
    1e04:	88 ec       	ldi	r24, 0xC8	; 200
    1e06:	90 e0       	ldi	r25, 0x00	; 0
    1e08:	9c 83       	std	Y+4, r25	; 0x04
    1e0a:	8b 83       	std	Y+3, r24	; 0x03
    1e0c:	8b 81       	ldd	r24, Y+3	; 0x03
    1e0e:	9c 81       	ldd	r25, Y+4	; 0x04
    1e10:	01 97       	sbiw	r24, 0x01	; 1
    1e12:	f1 f7       	brne	.-4      	; 0x1e10 <main+0x268>
    1e14:	9c 83       	std	Y+4, r25	; 0x04
    1e16:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e18:	8d 81       	ldd	r24, Y+5	; 0x05
    1e1a:	9e 81       	ldd	r25, Y+6	; 0x06
    1e1c:	01 97       	sbiw	r24, 0x01	; 1
    1e1e:	9e 83       	std	Y+6, r25	; 0x06
    1e20:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e22:	8d 81       	ldd	r24, Y+5	; 0x05
    1e24:	9e 81       	ldd	r25, Y+6	; 0x06
    1e26:	00 97       	sbiw	r24, 0x00	; 0
    1e28:	69 f7       	brne	.-38     	; 0x1e04 <main+0x25c>
    1e2a:	14 c0       	rjmp	.+40     	; 0x1e54 <main+0x2ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e2c:	6f 81       	ldd	r22, Y+7	; 0x07
    1e2e:	78 85       	ldd	r23, Y+8	; 0x08
    1e30:	89 85       	ldd	r24, Y+9	; 0x09
    1e32:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e34:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e38:	dc 01       	movw	r26, r24
    1e3a:	cb 01       	movw	r24, r22
    1e3c:	9e 83       	std	Y+6, r25	; 0x06
    1e3e:	8d 83       	std	Y+5, r24	; 0x05
    1e40:	8d 81       	ldd	r24, Y+5	; 0x05
    1e42:	9e 81       	ldd	r25, Y+6	; 0x06
    1e44:	9a 83       	std	Y+2, r25	; 0x02
    1e46:	89 83       	std	Y+1, r24	; 0x01
    1e48:	89 81       	ldd	r24, Y+1	; 0x01
    1e4a:	9a 81       	ldd	r25, Y+2	; 0x02
    1e4c:	01 97       	sbiw	r24, 0x01	; 1
    1e4e:	f1 f7       	brne	.-4      	; 0x1e4c <main+0x2a4>
    1e50:	9a 83       	std	Y+2, r25	; 0x02
    1e52:	89 83       	std	Y+1, r24	; 0x01
		HEEPROM_voidSend10Bytes(0x00, arr2);
	}

	while(1)
	{
		for(u8 local_u8Counter  = 0; local_u8Counter <= 9; local_u8Counter++)
    1e54:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1e56:	8f 5f       	subi	r24, 0xFF	; 255
    1e58:	8d 8f       	std	Y+29, r24	; 0x1d
    1e5a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1e5c:	8a 30       	cpi	r24, 0x0A	; 10
    1e5e:	08 f4       	brcc	.+2      	; 0x1e62 <main+0x2ba>
    1e60:	7e cf       	rjmp	.-260    	; 0x1d5e <main+0x1b6>
    1e62:	7b cf       	rjmp	.-266    	; 0x1d5a <main+0x1b2>

00001e64 <__prologue_saves__>:
    1e64:	2f 92       	push	r2
    1e66:	3f 92       	push	r3
    1e68:	4f 92       	push	r4
    1e6a:	5f 92       	push	r5
    1e6c:	6f 92       	push	r6
    1e6e:	7f 92       	push	r7
    1e70:	8f 92       	push	r8
    1e72:	9f 92       	push	r9
    1e74:	af 92       	push	r10
    1e76:	bf 92       	push	r11
    1e78:	cf 92       	push	r12
    1e7a:	df 92       	push	r13
    1e7c:	ef 92       	push	r14
    1e7e:	ff 92       	push	r15
    1e80:	0f 93       	push	r16
    1e82:	1f 93       	push	r17
    1e84:	cf 93       	push	r28
    1e86:	df 93       	push	r29
    1e88:	cd b7       	in	r28, 0x3d	; 61
    1e8a:	de b7       	in	r29, 0x3e	; 62
    1e8c:	ca 1b       	sub	r28, r26
    1e8e:	db 0b       	sbc	r29, r27
    1e90:	0f b6       	in	r0, 0x3f	; 63
    1e92:	f8 94       	cli
    1e94:	de bf       	out	0x3e, r29	; 62
    1e96:	0f be       	out	0x3f, r0	; 63
    1e98:	cd bf       	out	0x3d, r28	; 61
    1e9a:	09 94       	ijmp

00001e9c <__epilogue_restores__>:
    1e9c:	2a 88       	ldd	r2, Y+18	; 0x12
    1e9e:	39 88       	ldd	r3, Y+17	; 0x11
    1ea0:	48 88       	ldd	r4, Y+16	; 0x10
    1ea2:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ea4:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ea6:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ea8:	8c 84       	ldd	r8, Y+12	; 0x0c
    1eaa:	9b 84       	ldd	r9, Y+11	; 0x0b
    1eac:	aa 84       	ldd	r10, Y+10	; 0x0a
    1eae:	b9 84       	ldd	r11, Y+9	; 0x09
    1eb0:	c8 84       	ldd	r12, Y+8	; 0x08
    1eb2:	df 80       	ldd	r13, Y+7	; 0x07
    1eb4:	ee 80       	ldd	r14, Y+6	; 0x06
    1eb6:	fd 80       	ldd	r15, Y+5	; 0x05
    1eb8:	0c 81       	ldd	r16, Y+4	; 0x04
    1eba:	1b 81       	ldd	r17, Y+3	; 0x03
    1ebc:	aa 81       	ldd	r26, Y+2	; 0x02
    1ebe:	b9 81       	ldd	r27, Y+1	; 0x01
    1ec0:	ce 0f       	add	r28, r30
    1ec2:	d1 1d       	adc	r29, r1
    1ec4:	0f b6       	in	r0, 0x3f	; 63
    1ec6:	f8 94       	cli
    1ec8:	de bf       	out	0x3e, r29	; 62
    1eca:	0f be       	out	0x3f, r0	; 63
    1ecc:	cd bf       	out	0x3d, r28	; 61
    1ece:	ed 01       	movw	r28, r26
    1ed0:	08 95       	ret

00001ed2 <_exit>:
    1ed2:	f8 94       	cli

00001ed4 <__stop_program>:
    1ed4:	ff cf       	rjmp	.-2      	; 0x1ed4 <__stop_program>
